{
    "swagger": "2.0",
    "info": {
        "description": "This is a custody wallet service openapi server.",
        "title": "Wallet OpenAPI Documentation",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/api/v1/addresses": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "List of all available addresses.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "List all addresses",
                "operationId": "v1.addresses.list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The code of currency used in the transaction (e.g., TON, USDT, USD, EUR, etc.).",
                        "name": "currency",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The cursor to use for pagination.",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The number of records to return default: 20",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "COLLECT",
                            "DEPOSIT",
                            "GAS"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "AddressTypeCollect",
                            "AddressTypeDeposit",
                            "AddressTypeGas"
                        ],
                        "description": "The type of address to retrieve.",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Unique system generated identifier of the wallet",
                        "name": "walletId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CursorPage-Address"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/currencies": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Retrieve a list of all available currencies.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "currencies"
                ],
                "summary": "List currencies",
                "operationId": "v1.currencies.list",
                "parameters": [
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "rated",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CursorPage-Currency"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/currencies/{code}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Get currency info by currency code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "currencies"
                ],
                "summary": "Get Currency",
                "operationId": "v1.currencies.retrieve",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Currency code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Currency"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/endpoints": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "List webhook endpoints",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhook endpoints"
                ],
                "summary": "List webhook endpoints",
                "operationId": "v1.webhooks.list",
                "parameters": [
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CursorPage-Webhook"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Create a webhook endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhook endpoints"
                ],
                "summary": "Create webhook endpoint",
                "operationId": "v1.webhooks.create",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateWebhook"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Webhook"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/endpoints/{endpointId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Get specific webhook endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhook endpoints"
                ],
                "summary": "Get webhook endpoint",
                "operationId": "v1.webhooks.retrieve",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Endpoint ID",
                        "name": "endpointId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Webhook"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Delete specific webhook endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhook endpoints"
                ],
                "summary": "Delete webhook endpoint",
                "operationId": "v1.webhooks.delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Endpoint ID",
                        "name": "endpointId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Webhook"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Update specific webhook endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhook endpoints"
                ],
                "summary": "Update webhook endpoint",
                "operationId": "v1.webhooks.update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Endpoint ID",
                        "name": "endpointId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateWebhook"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Webhook"
                        }
                    }
                }
            }
        },
        "/api/v1/rates": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Query the latest exchange rates between different currencies.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rates"
                ],
                "summary": "List rates",
                "operationId": "v1.rates.list",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GetRatesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GetRatesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/rates/estimate": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Estimates currency exchange amounts.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rates"
                ],
                "summary": "Estimates",
                "operationId": "v1.rates.estimate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The amount of the base currency you want to convert",
                        "name": "base_amount",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minLength": 1,
                        "type": "string",
                        "description": "The currency code of the base currency that you want to convert from",
                        "name": "base_currency",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minLength": 1,
                        "type": "string",
                        "description": "The currency code of the target currency that you want to convert to",
                        "name": "to_currency",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EstimateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/transactions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "List transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "List transactions",
                "operationId": "v1.transactions.list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The type of currency involved in the transaction.",
                        "name": "currency",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A cursor value for pagination purposes.",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "UNKNOWN",
                            "OUT",
                            "IN"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "TransactionDirectionUnknown",
                            "TransactionDirectionOut",
                            "TransactionDirectionIn"
                        ],
                        "description": "The direction of the transaction (e.g., incoming or outgoing).",
                        "name": "direction",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The number of records to return default: 20",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The blockchain network on which the transaction takes place.",
                        "name": "network",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "PROCESSING",
                            "CANCELED",
                            "FAILED",
                            "SUCCEED"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "TransactionStatusProcessing",
                            "TransactionStatusCanceled",
                            "TransactionStatusFailed",
                            "TransactionStatusSucceed"
                        ],
                        "description": "The status of the transaction.",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The transaction hash, which uniquely identifies a transaction on the blockchain.",
                        "name": "txhash",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Unique system generated identifier of the wallet",
                        "name": "wallet_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CursorPage-Transaction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/transactions/transfer": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Create a transfer transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Transfer(internal)",
                "operationId": "v1.transactions.transfer",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateTransferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CreateTransferResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/transactions/withdraw": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Create a new withdrawal request for a specified currency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Withdraw",
                "operationId": "v1.transactions.withdraw",
                "parameters": [
                    {
                        "description": "withdraw",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateWithdrawRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CreateWithdrawReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/transactions/{transactionId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Get a transaction by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get transaction",
                "operationId": "v1.transactions.retrieve",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "transactionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/wallets": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "List all wallets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "List wallets",
                "operationId": "v1.wallets.list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cursor",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CursorPage-Wallet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Create a Wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Create wallet",
                "operationId": "v1.wallets.create",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateWalletRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Wallet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/wallets/{walletId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Get a wallet by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Get wallet",
                "operationId": "v1.wallets.retrieve",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet ID",
                        "name": "walletId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Wallet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Update a Wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Update wallet",
                "operationId": "v1.wallets.update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet ID",
                        "name": "walletId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateWalletRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Wallet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/wallets/{walletId}/accounts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "List wallet accounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "List wallet accounts",
                "operationId": "v1.wallets.listAccounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet ID",
                        "name": "walletId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cursor",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CursorPage-Account"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/wallets/{walletId}/deposit_address": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Get wallet's deposit address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Get deposit address",
                "operationId": "v1.wallets.getDepositAddress",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet ID",
                        "name": "walletId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The code of currency used in the transaction (e.g., TON, USDT, USD, EUR, etc.).",
                        "name": "currency",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "chain network, if not specified, the default network of the currency will be used.",
                        "name": "network",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/wallets/{walletId}/deposit_addresses": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "List wallet's deposit addresses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "List deposit addresses",
                "operationId": "v1.wallets.listDepositAddresses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet ID",
                        "name": "walletId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The code of currency used in the transaction (e.g., TON, USDT, USD, EUR, etc.).",
                        "name": "currency",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cursor",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit, default is 20",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "chain network, if not specified, the default network of the currency will be used.",
                        "name": "network",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CursorPage-Address"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Account": {
            "type": "object",
            "required": [
                "balance",
                "currency",
                "id",
                "in_transit_balance",
                "locked_balance",
                "wallet_id"
            ],
            "properties": {
                "balance": {
                    "description": "The current balance of the wallet",
                    "type": "string"
                },
                "currency": {
                    "description": "The currency associated with the wallet",
                    "type": "string"
                },
                "id": {
                    "description": "Account id",
                    "type": "string"
                },
                "in_transit_balance": {
                    "description": "The amount of the balance that is in transit",
                    "type": "string"
                },
                "locked_balance": {
                    "description": "The amount of the balance that is locked",
                    "type": "string"
                },
                "wallet_id": {
                    "description": "The wallet's ID",
                    "type": "string"
                }
            }
        },
        "Address": {
            "type": "object",
            "required": [
                "address",
                "network",
                "type"
            ],
            "properties": {
                "address": {
                    "description": "the blockchain address.",
                    "type": "string"
                },
                "network": {
                    "description": "the blockchain network",
                    "type": "string"
                },
                "type": {
                    "description": "the type of address.",
                    "type": "string"
                }
            }
        },
        "AddressType": {
            "type": "string",
            "enum": [
                "COLLECT",
                "DEPOSIT",
                "GAS"
            ],
            "x-enum-varnames": [
                "AddressTypeCollect",
                "AddressTypeDeposit",
                "AddressTypeGas"
            ]
        },
        "CreateTransferRequest": {
            "type": "object",
            "required": [
                "amount",
                "currency",
                "from",
                "to",
                "wallet_id"
            ],
            "properties": {
                "amount": {
                    "description": "The amount of currency to be transferred",
                    "type": "string"
                },
                "currency": {
                    "description": "The code of currency to be transferred",
                    "type": "string"
                },
                "from": {
                    "description": "The ID of the wallet from which the transfer will be made",
                    "type": "string"
                },
                "to": {
                    "description": "The ID of the wallet to which the transfer will be made",
                    "type": "string"
                },
                "wallet_id": {
                    "description": "The ID of the wallet from which the transfer will be made",
                    "type": "string"
                }
            }
        },
        "CreateTransferResponse": {
            "type": "object",
            "required": [
                "transaction_id"
            ],
            "properties": {
                "transaction_id": {
                    "type": "string"
                }
            }
        },
        "CreateWalletRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "Wallet Name",
                    "type": "string"
                },
                "uid": {
                    "description": "Custom ID",
                    "type": "string"
                }
            }
        },
        "CreateWebhook": {
            "type": "object",
            "required": [
                "eventTypes",
                "headers",
                "metadata",
                "url"
            ],
            "properties": {
                "description": {
                    "description": "The description of the webhook",
                    "type": "string"
                },
                "disabled": {
                    "description": "The disabled of the webhook",
                    "type": "boolean"
                },
                "eventTypes": {
                    "description": "The event types of the webhook",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EventType"
                    }
                },
                "headers": {
                    "description": "The headers of the webhook",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "metadata": {
                    "description": "The metadata of the webhook",
                    "type": "object",
                    "additionalProperties": {}
                },
                "uid": {
                    "description": "The uid of the webhook",
                    "type": "string"
                },
                "url": {
                    "description": "The url of the webhook",
                    "type": "string"
                }
            }
        },
        "CreateWithdrawReply": {
            "type": "object",
            "required": [
                "transaction_id"
            ],
            "properties": {
                "transaction_id": {
                    "type": "string"
                }
            }
        },
        "CreateWithdrawRequest": {
            "type": "object",
            "required": [
                "amount",
                "currency",
                "network",
                "toAddress",
                "walletId"
            ],
            "properties": {
                "amount": {
                    "description": "The amount of currency to be withdrawn",
                    "type": "string"
                },
                "currency": {
                    "description": "The code of currency to be withdrawn.",
                    "type": "string"
                },
                "network": {
                    "description": "The network of the currency to be withdrawn.",
                    "type": "string"
                },
                "toAddress": {
                    "description": "The recipient address where the withdrawn funds will be sent. This is usually a wallet address specific to the chosen network.",
                    "type": "string"
                },
                "walletId": {
                    "description": "The ID of the wallet from which the withdrawal will be made.",
                    "type": "string"
                }
            }
        },
        "Currency": {
            "type": "object",
            "required": [
                "can_deposit",
                "can_transfer",
                "can_withdraw",
                "code",
                "decimals",
                "logo",
                "max_fee",
                "max_fee_for_ct_addr",
                "max_withdraw_amount",
                "min_deposit_amount",
                "min_fee",
                "min_fee_for_ct_addr",
                "min_withdraw_amount",
                "name",
                "need_memo",
                "networks",
                "precision",
                "rated",
                "symbol"
            ],
            "properties": {
                "can_deposit": {
                    "description": "Is it depositable on-chain",
                    "type": "boolean"
                },
                "can_transfer": {
                    "description": "Is it transferable within the platform",
                    "type": "boolean"
                },
                "can_withdraw": {
                    "description": "Is it withdrawable on-chain",
                    "type": "boolean"
                },
                "code": {
                    "description": "Currency code identifier",
                    "type": "string"
                },
                "contract_address": {
                    "description": "Contract address (for token contracts, if applicable)",
                    "type": "string"
                },
                "decimals": {
                    "description": "Decimal precision",
                    "type": "integer"
                },
                "logo": {
                    "description": "Currency logo URL",
                    "type": "string"
                },
                "max_fee": {
                    "description": "Maximum fee",
                    "type": "string"
                },
                "max_fee_for_ct_addr": {
                    "description": "Maximum fee for contract addresses",
                    "type": "string"
                },
                "max_withdraw_amount": {
                    "description": "Maximum withdraw amount per transaction",
                    "type": "string"
                },
                "min_deposit_amount": {
                    "description": "Minimum deposit amount per transaction",
                    "type": "string"
                },
                "min_fee": {
                    "description": "Minimum fee",
                    "type": "string"
                },
                "min_fee_for_ct_addr": {
                    "description": "Minimum fee for contract addresses",
                    "type": "string"
                },
                "min_withdraw_amount": {
                    "description": "Minimum withdraw amount per transaction",
                    "type": "string"
                },
                "name": {
                    "description": "Currency name",
                    "type": "string"
                },
                "need_memo": {
                    "description": "Does it require a memo/note for transactions",
                    "type": "boolean"
                },
                "networks": {
                    "description": "Networks information",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CurrencyNetwork"
                    }
                },
                "precision": {
                    "description": "The number of decimals used by the currency",
                    "type": "integer"
                },
                "rated": {
                    "description": "Participate in exchange rate calculation",
                    "type": "boolean"
                },
                "symbol": {
                    "description": "Currency symbol",
                    "type": "string"
                }
            }
        },
        "CurrencyNetwork": {
            "type": "object",
            "required": [
                "can_deposit",
                "can_transfer",
                "can_withdraw",
                "code",
                "id",
                "max_fee",
                "max_fee_for_ct_addr",
                "max_withdraw_amount",
                "min_confirmations",
                "min_deposit_amount",
                "min_fee",
                "min_fee_for_ct_addr",
                "min_withdraw_amount",
                "name",
                "need_memo",
                "network"
            ],
            "properties": {
                "can_deposit": {
                    "description": "Indicates if on-chain deposits are allowed",
                    "type": "boolean"
                },
                "can_transfer": {
                    "description": "Indicates if internal transfers are permitted",
                    "type": "boolean"
                },
                "can_withdraw": {
                    "description": "Indicates if on-chain withdrawals are allowed",
                    "type": "boolean"
                },
                "code": {
                    "description": "Currency code",
                    "type": "string"
                },
                "contract_address": {
                    "description": "Contract address for tokens based on smart contracts, such as ERC-20",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "max_fee": {
                    "description": "Maximum transaction fee",
                    "type": "string"
                },
                "max_fee_for_ct_addr": {
                    "description": "Maximum transaction fee for contract addresses",
                    "type": "string"
                },
                "max_withdraw_amount": {
                    "description": "Maximum amount for a single on-chain withdrawal",
                    "type": "string"
                },
                "min_collect_amount": {
                    "description": "Minimum amount for collection, i.e., the minimum amount to aggregate small balances to a single address",
                    "type": "string"
                },
                "min_confirmations": {
                    "description": "Minimum number of confirmations required, indicating the number of block confirmations needed for a transaction to be considered valid",
                    "type": "integer"
                },
                "min_deposit_amount": {
                    "description": "Minimum amount for a single deposit",
                    "type": "string"
                },
                "min_fee": {
                    "description": "Minimum transaction fee",
                    "type": "string"
                },
                "min_fee_for_ct_addr": {
                    "description": "Minimum transaction fee for contract addresses",
                    "type": "string"
                },
                "min_withdraw_amount": {
                    "description": "Minimum amount for a single on-chain withdrawal",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the currency, e.g., Bitcoin, Ethereum, etc.",
                    "type": "string"
                },
                "need_memo": {
                    "description": "Indicates if additional Memo information is required, as needed by some currencies or exchanges",
                    "type": "boolean"
                },
                "network": {
                    "description": "Associated network, e.g., Bitcoin, Ethereum, etc.",
                    "type": "string"
                }
            }
        },
        "CurrencyPair": {
            "type": "object",
            "required": [
                "base_currency",
                "to_currency"
            ],
            "properties": {
                "base_currency": {
                    "description": "The currency to be converted from",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "to_currency": {
                    "description": "The currency to be converted to.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                }
            }
        },
        "CursorPage-Account": {
            "type": "object",
            "required": [
                "has_next",
                "items"
            ],
            "properties": {
                "has_next": {
                    "type": "boolean"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Account"
                    }
                },
                "next_cursor": {
                    "type": "string"
                },
                "prev_cursor": {
                    "type": "string"
                }
            }
        },
        "CursorPage-Address": {
            "type": "object",
            "required": [
                "has_next",
                "items"
            ],
            "properties": {
                "has_next": {
                    "type": "boolean"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Address"
                    }
                },
                "next_cursor": {
                    "type": "string"
                },
                "prev_cursor": {
                    "type": "string"
                }
            }
        },
        "CursorPage-Currency": {
            "type": "object",
            "required": [
                "has_next",
                "items"
            ],
            "properties": {
                "has_next": {
                    "type": "boolean"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Currency"
                    }
                },
                "next_cursor": {
                    "type": "string"
                },
                "prev_cursor": {
                    "type": "string"
                }
            }
        },
        "CursorPage-Transaction": {
            "type": "object",
            "required": [
                "has_next",
                "items"
            ],
            "properties": {
                "has_next": {
                    "type": "boolean"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Transaction"
                    }
                },
                "next_cursor": {
                    "type": "string"
                },
                "prev_cursor": {
                    "type": "string"
                }
            }
        },
        "CursorPage-Wallet": {
            "type": "object",
            "required": [
                "has_next",
                "items"
            ],
            "properties": {
                "has_next": {
                    "type": "boolean"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Wallet"
                    }
                },
                "next_cursor": {
                    "type": "string"
                },
                "prev_cursor": {
                    "type": "string"
                }
            }
        },
        "CursorPage-Webhook": {
            "type": "object",
            "required": [
                "has_next",
                "items"
            ],
            "properties": {
                "has_next": {
                    "type": "boolean"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Webhook"
                    }
                },
                "next_cursor": {
                    "type": "string"
                },
                "prev_cursor": {
                    "type": "string"
                }
            }
        },
        "Error": {
            "type": "object",
            "required": [
                "code",
                "msg"
            ],
            "properties": {
                "code": {
                    "description": "error code",
                    "type": "integer"
                },
                "msg": {
                    "description": "error message",
                    "type": "string"
                }
            }
        },
        "EstimateResponse": {
            "type": "object",
            "required": [
                "base_amount",
                "base_currency",
                "rate",
                "to_amount",
                "to_currency"
            ],
            "properties": {
                "base_amount": {
                    "description": "The amount of the base currency you want to convert",
                    "type": "string"
                },
                "base_currency": {
                    "description": "The currency code of the base currency that you want to convert from",
                    "type": "string"
                },
                "rate": {
                    "description": "The exchange rate from the base currency to the target currency",
                    "type": "number"
                },
                "to_amount": {
                    "description": "The amount of the target currency you will receive after the conversion",
                    "type": "string"
                },
                "to_currency": {
                    "description": "The currency code of the target currency that you want to convert to",
                    "type": "string"
                }
            }
        },
        "EventType": {
            "type": "string",
            "enum": [
                "deposit_success",
                "withdraw_approved",
                "withdraw_success",
                "withdraw_failed",
                "transfer_approved",
                "transfer_success",
                "transfer_failed"
            ],
            "x-enum-varnames": [
                "EventTypeDepositSuccess",
                "EventTypeWithdrawApproved",
                "EventTypeWithdrawSuccess",
                "EventTypeWithdrawFailed",
                "EventTypeTransferApproved",
                "EventTypeTransferSuccess",
                "EventTypeTransferFailed"
            ]
        },
        "GetRatesRequest": {
            "type": "object",
            "required": [
                "pairs"
            ],
            "properties": {
                "pairs": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/CurrencyPair"
                    }
                }
            }
        },
        "GetRatesResponse": {
            "type": "object",
            "required": [
                "rates"
            ],
            "properties": {
                "rates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Rate"
                    }
                }
            }
        },
        "Rate": {
            "type": "object",
            "required": [
                "pair",
                "rate"
            ],
            "properties": {
                "pair": {
                    "$ref": "#/definitions/CurrencyPair"
                },
                "rate": {
                    "description": "The exchange rate between the `BaseCurrency` and `ToCurrency`",
                    "type": "number"
                }
            }
        },
        "Transaction": {
            "type": "object",
            "required": [
                "amount",
                "avatar",
                "created_at",
                "currency",
                "direction",
                "from_address",
                "gateway",
                "id",
                "network",
                "status",
                "to_address",
                "wallet_id"
            ],
            "properties": {
                "amount": {
                    "description": "The total amount of money involved in the transaction.",
                    "type": "string"
                },
                "avatar": {
                    "description": "A URL or path to an avatar image associated with the transaction, often used to visually represent the transaction's source or recipient.",
                    "type": "string"
                },
                "created_at": {
                    "description": "The date and time when the transaction was created.",
                    "type": "string"
                },
                "currency": {
                    "description": "The code of currency used in the transaction (e.g., TON, USDT, USD, EUR, etc.).",
                    "type": "string"
                },
                "direction": {
                    "description": "Indicates the flow of the transaction, typically whether it is incoming or outgoing.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TransactionDirection"
                        }
                    ]
                },
                "from_address": {
                    "description": "The address of the sender.",
                    "type": "string"
                },
                "gateway": {
                    "description": "The payment gateway or platform used to process the transaction.",
                    "type": "string"
                },
                "id": {
                    "description": "A unique identifier for the transaction.",
                    "type": "string"
                },
                "network": {
                    "description": "The blockchain network on which the transaction takes place.",
                    "type": "string"
                },
                "status": {
                    "description": "The current status of the transaction.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TransactionStatus"
                        }
                    ]
                },
                "to_address": {
                    "description": "The address of the recipient.",
                    "type": "string"
                },
                "wallet_id": {
                    "description": "The ID of the wallet associated with the transaction.",
                    "type": "string"
                }
            }
        },
        "TransactionDirection": {
            "type": "string",
            "enum": [
                "UNKNOWN",
                "OUT",
                "IN"
            ],
            "x-enum-varnames": [
                "TransactionDirectionUnknown",
                "TransactionDirectionOut",
                "TransactionDirectionIn"
            ]
        },
        "TransactionStatus": {
            "type": "string",
            "enum": [
                "PROCESSING",
                "CANCELED",
                "FAILED",
                "SUCCEED"
            ],
            "x-enum-varnames": [
                "TransactionStatusProcessing",
                "TransactionStatusCanceled",
                "TransactionStatusFailed",
                "TransactionStatusSucceed"
            ]
        },
        "UpdateWalletRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Wallet Name",
                    "type": "string"
                },
                "uid": {
                    "description": "Custom ID",
                    "type": "string"
                }
            }
        },
        "UpdateWebhook": {
            "type": "object",
            "required": [
                "eventTypes",
                "headers",
                "metadata"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EventType"
                    }
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "uid": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "Wallet": {
            "type": "object",
            "required": [
                "created_at",
                "id",
                "name",
                "uid"
            ],
            "properties": {
                "created_at": {
                    "description": "Created time",
                    "type": "string"
                },
                "id": {
                    "description": "Wallet id",
                    "type": "string"
                },
                "name": {
                    "description": "Wallet name",
                    "type": "string"
                },
                "uid": {
                    "description": "External unique ID",
                    "type": "string"
                }
            }
        },
        "Webhook": {
            "type": "object",
            "required": [
                "createdAt",
                "description",
                "disabled",
                "eventTypes",
                "filter",
                "headers",
                "id",
                "metadata",
                "url"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EventType"
                    }
                },
                "filter": {
                    "type": "string"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "uid": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-Api-Key",
            "in": "header"
        },
        "SignatureAuth": {
            "type": "apiKey",
            "name": "X-Signature",
            "in": "header"
        }
    }
}