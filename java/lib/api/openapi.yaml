openapi: 3.0.0
info:
  contact: {}
  description: This is a custody wallet service openapi server.
  title: Wallet OpenAPI Documentation
  version: "1.0"
servers:
- url: /
paths:
  /api/v1/networks:
    get:
      description: List networks
      operationId: v1.networks.list
      parameters:
      - description: Cursor
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-ChainNetwork'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: List Networks
      tags:
      - networks
      x-accepts: application/json
  /api/v1/wallets:
    get:
      description: List all wallets
      operationId: v1.wallets.list
      parameters:
      - description: Cursor
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-Wallet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: List wallets
      tags:
      - wallets
      x-accepts: application/json
    post:
      description: Create a Wallet
      operationId: v1.wallets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWalletRequest'
        description: Request body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Create wallet
      tags:
      - wallets
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/wallets/{walletId}:
    get:
      description: Get a wallet by ID
      operationId: v1.wallets.retrieve
      parameters:
      - description: Wallet ID
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Get wallet
      tags:
      - wallets
      x-accepts: application/json
    patch:
      description: Update a Wallet
      operationId: v1.wallets.update
      parameters:
      - description: Wallet ID
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWalletRequest'
        description: Request body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Update wallet
      tags:
      - wallets
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/wallets/{walletId}/accounts:
    get:
      description: List wallet accounts
      operationId: v1.wallets.listAccounts
      parameters:
      - description: Wallet ID
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      - description: Cursor
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-Account'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: List wallet accounts
      tags:
      - wallets
      x-accepts: application/json
  /api/v1/wallets/{walletId}/deposit_address:
    get:
      description: Get wallet's deposit address
      operationId: v1.wallets.getDepositAddress
      parameters:
      - description: Wallet ID
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      - description: The code of currency used in the transaction (e.g., TON, USDT,
          USD, EUR, etc.).
        explode: true
        in: query
        name: currency
        required: true
        schema:
          type: string
        style: form
      - description: chain network, if not specified, the default network of the currency
          will be used.
        explode: true
        in: query
        name: network
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Get deposit address
      tags:
      - addresses
      x-accepts: application/json
  /api/v1/wallets/{walletId}/deposit_addresses:
    get:
      description: List wallet's deposit addresses
      operationId: v1.wallets.listDepositAddresses
      parameters:
      - description: Wallet ID
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      - description: The code of currency used in the transaction (e.g., TON, USDT,
          USD, EUR, etc.).
        explode: true
        in: query
        name: currency
        required: false
        schema:
          type: string
        style: form
      - description: Cursor
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Limit, default is 20
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: chain network, if not specified, the default network of the currency
          will be used.
        explode: true
        in: query
        name: network
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-Address'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: List deposit addresses
      tags:
      - addresses
      x-accepts: application/json
  /api/v1/addresses:
    get:
      description: List of all available addresses.
      operationId: v1.addresses.list
      parameters:
      - description: The code of currency used in the transaction (e.g., TON, USDT,
          USD, EUR, etc.).
        explode: true
        in: query
        name: currency
        required: false
        schema:
          type: string
        style: form
      - description: The cursor to use for pagination.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: 'The number of records to return default: 20'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The type of address to retrieve.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: Unique system generated identifier of the wallet
        explode: true
        in: query
        name: walletId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-Address'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: List all addresses
      tags:
      - addresses
      x-accepts: application/json
  /api/v1/currencies:
    get:
      description: Retrieve a list of all available currencies.
      operationId: v1.currencies.list
      parameters:
      - explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: rated
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-Currency'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: List currencies
      tags:
      - currencies
      x-accepts: application/json
  /api/v1/currencies/{code}:
    get:
      description: Get currency info by currency code
      operationId: v1.currencies.retrieve
      parameters:
      - description: Currency code
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Currency'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Get Currency
      tags:
      - currencies
      x-accepts: application/json
  /api/v1/rates:
    post:
      description: Query the latest exchange rates between different currencies.
      operationId: v1.rates.list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRatesRequest'
        description: Request body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRatesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: List rates
      tags:
      - rates
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/rates/estimate:
    get:
      description: Estimates currency exchange amounts.
      operationId: v1.rates.estimate
      parameters:
      - description: The amount of the base currency you want to convert
        explode: true
        in: query
        name: base_amount
        required: true
        schema:
          type: string
        style: form
      - description: The currency code of the base currency that you want to convert
          from
        explode: true
        in: query
        name: base_currency
        required: true
        schema:
          minLength: 1
          type: string
        style: form
      - description: The currency code of the target currency that you want to convert
          to
        explode: true
        in: query
        name: to_currency
        required: true
        schema:
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstimateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Estimates
      tags:
      - rates
      x-accepts: application/json
  /api/v1/sweep/address/{address}:
    post:
      description: Sweep funds from a single address
      operationId: v1.sweep.address
      parameters:
      - description: Address that funds will be swept from
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SweepAddressRequest'
        description: Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SweepAddressResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Sweep address
      tags:
      - sweep funds
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/transactions:
    get:
      description: List transactions
      operationId: v1.transactions.list
      parameters:
      - description: The type of currency involved in the transaction.
        explode: true
        in: query
        name: currency
        required: false
        schema:
          type: string
        style: form
      - description: A cursor value for pagination purposes.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: The direction of the transaction (e.g., incoming or outgoing).
        explode: true
        in: query
        name: direction
        required: false
        schema:
          enum:
          - OUT
          - IN
          type: string
        style: form
        x-enum-varnames:
        - TransactionDirectionOut
        - TransactionDirectionIn
      - description: The payment gateway or platform used to process the transaction.
        explode: true
        in: query
        name: gateway
        required: false
        schema:
          type: string
        style: form
      - description: 'The number of records to return default: 20'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The blockchain network on which the transaction takes place.
        explode: true
        in: query
        name: network
        required: false
        schema:
          type: string
        style: form
      - description: The status of the transaction.
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - PROCESSING
          - CANCELED
          - FAILED
          - SUCCEED
          type: string
        style: form
        x-enum-varnames:
        - TransactionStatusProcessing
        - TransactionStatusCanceled
        - TransactionStatusFailed
        - TransactionStatusSucceed
      - description: The transaction hash, which uniquely identifies a transaction
          on the blockchain.
        explode: true
        in: query
        name: txhash
        required: false
        schema:
          type: string
        style: form
      - description: Unique system generated identifier of the wallet
        explode: true
        in: query
        name: wallet_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-Transaction'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: List transactions
      tags:
      - transactions
      x-accepts: application/json
  /api/v1/transactions/transfer:
    post:
      description: Create a transfer transaction
      operationId: v1.transactions.transfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransferRequest'
        description: Request Body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTransferResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Transfer(internal)
      tags:
      - transactions
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/transactions/withdraw:
    post:
      description: Create a new withdrawal request for a specified currency
      operationId: v1.transactions.withdraw
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWithdrawRequest'
        description: withdraw
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWithdrawReply'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Withdraw
      tags:
      - transactions
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/transactions/{transactionId}:
    get:
      description: Get a transaction by ID
      operationId: v1.transactions.retrieve
      parameters:
      - description: Transaction ID
        explode: false
        in: path
        name: transactionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Get transaction
      tags:
      - transactions
      x-accepts: application/json
  /api/v1/webhook/endpoints:
    get:
      description: List webhook endpoints
      operationId: v1.webhooks.list
      parameters:
      - explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-Endpoint'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: List webhook endpoints
      tags:
      - webhook endpoints
      x-accepts: application/json
    post:
      description: Create a webhook endpoint
      operationId: v1.webhooks.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEndpoint'
        description: Request body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Create webhook endpoint
      tags:
      - webhook endpoints
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/webhook/endpoints/{endpointId}:
    delete:
      description: Delete specific webhook endpoint
      operationId: v1.webhooks.delete
      parameters:
      - description: Endpoint ID
        explode: false
        in: path
        name: endpointId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWebhookEndpointResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Delete webhook endpoint
      tags:
      - webhook endpoints
      x-accepts: application/json
    get:
      description: Get specific webhook endpoint
      operationId: v1.webhooks.retrieve
      parameters:
      - description: Endpoint ID
        explode: false
        in: path
        name: endpointId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Get webhook endpoint
      tags:
      - webhook endpoints
      x-accepts: application/json
    patch:
      description: Update specific webhook endpoint
      operationId: v1.webhooks.update
      parameters:
      - description: Endpoint ID
        explode: false
        in: path
        name: endpointId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEndpoint'
        description: Request body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
          description: OK
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Update webhook endpoint
      tags:
      - webhook endpoints
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/webhook/event_types:
    get:
      description: List all webhook event types
      operationId: v1.webhooks.eventtypes.list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EventType'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: List webhook event types
      tags:
      - webhook event types
      x-accepts: application/json
  /api/v1/webhook/events:
    get:
      description: List webhook events
      operationId: v1.webhooks.events.list
      parameters:
      - description: The cursor of the webhook event
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: The type of the webhook event
        explode: false
        in: query
        name: event_types
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The limit of the webhook event
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-WebhookEvent'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: List webhook events
      tags:
      - webhook events
      x-accepts: application/json
  /api/v1/webhook/events/resend:
    post:
      description: Resend a webhook event to specific endpoint
      operationId: v1.webhooks.events.resend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendWebhookEventRequest'
        description: The request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendWebhookEventResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Resend webhook event
      tags:
      - webhook events
      x-contentType: application/json
      x-accepts: application/json
components:
  schemas:
    Account:
      example:
        locked_balance: locked_balance
        wallet_id: wallet_id
        in_transit_balance: in_transit_balance
        balance: balance
        currency: currency
        id: id
      properties:
        balance:
          description: The current balance of the wallet
          type: string
        currency:
          description: The currency associated with the wallet
          type: string
        id:
          description: Account id
          type: string
        in_transit_balance:
          description: The amount of the balance that is in transit
          type: string
        locked_balance:
          description: The amount of the balance that is locked
          type: string
        wallet_id:
          description: The wallet's ID
          type: string
      required:
      - balance
      - currency
      - id
      - in_transit_balance
      - locked_balance
      - wallet_id
      type: object
    Address:
      example:
        address: address
        type: type
        network: network
      properties:
        address:
          description: the blockchain address.
          type: string
        network:
          description: the blockchain network
          type: string
        type:
          description: the type of address.
          type: string
      required:
      - address
      - network
      - type
      type: object
    ChainNetwork:
      example:
        icon_url: icon_url
        network_id: network_id
        name: name
        explorer_block_url: explorer_block_url
        id: id
        explorer_tx_url: explorer_tx_url
        explorer_address_url: explorer_address_url
        network: network
      properties:
        explorer_address_url:
          type: string
        explorer_block_url:
          type: string
        explorer_tx_url:
          type: string
        icon_url:
          type: string
        id:
          type: string
        name:
          type: string
        network:
          type: string
        network_id:
          type: string
      type: object
    CreateEndpoint:
      example:
        headers:
          key: headers
        uid: uid
        metadata:
          key: ""
        description: description
        disabled: true
        filter_types:
        - filter_types
        - filter_types
        url: url
      properties:
        description:
          description: The description of the webhook endpoint
          type: string
        disabled:
          description: The disabled of the webhook endpoint
          type: boolean
        filter_types:
          description: The filter event types of the webhook endpoint
          items:
            type: string
          type: array
        headers:
          additionalProperties:
            type: string
          description: The headers of the webhook endpoint
          type: object
        metadata:
          additionalProperties: {}
          description: The metadata of the webhook endpoint
          type: object
        uid:
          description: The uid of the webhook endpoint
          type: string
        url:
          description: The url of the webhook endpoint
          type: string
      required:
      - filter_types
      - url
      type: object
    CreateTransferRequest:
      example:
        amount: amount
        currency: currency
        from: from
        to: to
      properties:
        amount:
          description: The amount of currency to be transferred
          type: string
        currency:
          description: The code of currency to be transferred
          type: string
        from:
          description: The ID of the wallet from which the transfer will be made
          type: string
        to:
          description: The ID of the wallet to which the transfer will be made
          type: string
      required:
      - amount
      - currency
      - from
      - to
      type: object
    CreateTransferResponse:
      example:
        transfer_id: transfer_id
      properties:
        transfer_id:
          type: string
      required:
      - transfer_id
      type: object
    CreateWalletRequest:
      example:
        uid: uid
        name: name
      properties:
        name:
          description: Wallet Name
          type: string
        uid:
          description: Custom ID
          type: string
      required:
      - name
      type: object
    CreateWithdrawReply:
      example:
        transaction_id: transaction_id
      properties:
        transaction_id:
          type: string
      required:
      - transaction_id
      type: object
    CreateWithdrawRequest:
      example:
        amount: amount
        wallet_id: wallet_id
        fee: fee
        fee_currency: fee_currency
        currency: currency
        to_address: to_address
        network: network
      properties:
        amount:
          description: The amount of currency to be withdrawn
          type: string
        currency:
          description: The code of currency to be withdrawn.
          type: string
        fee:
          description: The fee of the withdrawal
          type: string
        fee_currency:
          description: The currency of fee
          type: string
        network:
          description: The network of the currency to be withdrawn.
          type: string
        to_address:
          description: The recipient address where the withdrawn funds will be sent.
            This is usually a wallet address specific to the chosen network.
          type: string
        wallet_id:
          description: The ID of the wallet from which the withdrawal will be made.
          type: string
      required:
      - amount
      - currency
      - network
      - to_address
      - wallet_id
      type: object
    Currency:
      example:
        symbol: symbol
        code: code
        need_memo: true
        precision: 1
        can_deposit: true
        contract_address: contract_address
        networks:
        - code: code
          need_memo: true
          fee: fee
          fee_currency: fee_currency
          can_deposit: true
          contract_address: contract_address
          min_fee_for_ct_addr: min_fee_for_ct_addr
          min_withdraw_amount: min_withdraw_amount
          network: network
          max_withdraw_amount: max_withdraw_amount
          min_collect_amount: min_collect_amount
          max_fee_for_ct_addr: max_fee_for_ct_addr
          min_fee: min_fee
          name: name
          can_withdraw: true
          id: id
          can_transfer: true
          min_deposit_amount: min_deposit_amount
          max_fee: max_fee
          min_confirmations: 6
        - code: code
          need_memo: true
          fee: fee
          fee_currency: fee_currency
          can_deposit: true
          contract_address: contract_address
          min_fee_for_ct_addr: min_fee_for_ct_addr
          min_withdraw_amount: min_withdraw_amount
          network: network
          max_withdraw_amount: max_withdraw_amount
          min_collect_amount: min_collect_amount
          max_fee_for_ct_addr: max_fee_for_ct_addr
          min_fee: min_fee
          name: name
          can_withdraw: true
          id: id
          can_transfer: true
          min_deposit_amount: min_deposit_amount
          max_fee: max_fee
          min_confirmations: 6
        min_fee_for_ct_addr: min_fee_for_ct_addr
        min_withdraw_amount: min_withdraw_amount
        max_withdraw_amount: max_withdraw_amount
        rated: true
        decimals: 0
        max_fee_for_ct_addr: max_fee_for_ct_addr
        min_fee: min_fee
        name: name
        logo: logo
        can_withdraw: true
        can_transfer: true
        min_deposit_amount: min_deposit_amount
        max_fee: max_fee
      properties:
        can_deposit:
          description: Is it depositable on-chain
          type: boolean
        can_transfer:
          description: Is it transferable within the platform
          type: boolean
        can_withdraw:
          description: Is it withdrawable on-chain
          type: boolean
        code:
          description: Currency code identifier
          type: string
        contract_address:
          description: Contract address (for token contracts, if applicable)
          type: string
        decimals:
          description: Decimal precision
          type: integer
        logo:
          description: Currency logo URL
          type: string
        max_fee:
          description: Maximum fee
          type: string
        max_fee_for_ct_addr:
          description: Maximum fee for contract addresses
          type: string
        max_withdraw_amount:
          description: Maximum withdraw amount per transaction
          type: string
        min_deposit_amount:
          description: Minimum deposit amount per transaction
          type: string
        min_fee:
          description: Minimum fee
          type: string
        min_fee_for_ct_addr:
          description: Minimum fee for contract addresses
          type: string
        min_withdraw_amount:
          description: Minimum withdraw amount per transaction
          type: string
        name:
          description: Currency name
          type: string
        need_memo:
          description: Does it require a memo/note for transactions
          type: boolean
        networks:
          description: Networks information
          items:
            $ref: '#/components/schemas/CurrencyNetwork'
          type: array
        precision:
          description: The number of decimals used by the currency
          type: integer
        rated:
          description: Participate in exchange rate calculation
          type: boolean
        symbol:
          description: Currency symbol
          type: string
      required:
      - can_deposit
      - can_transfer
      - can_withdraw
      - code
      - decimals
      - logo
      - max_fee
      - max_fee_for_ct_addr
      - max_withdraw_amount
      - min_deposit_amount
      - min_fee
      - min_fee_for_ct_addr
      - min_withdraw_amount
      - name
      - need_memo
      - networks
      - precision
      - rated
      - symbol
      type: object
    CurrencyNetwork:
      example:
        code: code
        need_memo: true
        fee: fee
        fee_currency: fee_currency
        can_deposit: true
        contract_address: contract_address
        min_fee_for_ct_addr: min_fee_for_ct_addr
        min_withdraw_amount: min_withdraw_amount
        network: network
        max_withdraw_amount: max_withdraw_amount
        min_collect_amount: min_collect_amount
        max_fee_for_ct_addr: max_fee_for_ct_addr
        min_fee: min_fee
        name: name
        can_withdraw: true
        id: id
        can_transfer: true
        min_deposit_amount: min_deposit_amount
        max_fee: max_fee
        min_confirmations: 6
      properties:
        can_deposit:
          description: Indicates if on-chain deposits are allowed
          type: boolean
        can_transfer:
          description: Indicates if internal transfers are permitted
          type: boolean
        can_withdraw:
          description: Indicates if on-chain withdrawals are allowed
          type: boolean
        code:
          description: Currency code
          type: string
        contract_address:
          description: Contract address for tokens based on smart contracts, such
            as ERC-20
          type: string
        id:
          type: string
        max_fee:
          description: Maximum transaction fee
          type: string
        fee:
          description: Transaction fee
          type: string
        fee_currency:
          description: Transaction fee currency
          type: string
        max_fee_for_ct_addr:
          description: Maximum transaction fee for contract addresses
          type: string
        max_withdraw_amount:
          description: Maximum amount for a single on-chain withdrawal
          type: string
        min_collect_amount:
          description: Minimum amount for collection, i.e., the minimum amount to
            aggregate small balances to a single address
          type: string
        min_confirmations:
          description: Minimum number of confirmations required, indicating the number
            of block confirmations needed for a transaction to be considered valid
          type: integer
        min_deposit_amount:
          description: Minimum amount for a single deposit
          type: string
        min_fee:
          description: Minimum transaction fee
          type: string
        min_fee_for_ct_addr:
          description: Minimum transaction fee for contract addresses
          type: string
        min_withdraw_amount:
          description: Minimum amount for a single on-chain withdrawal
          type: string
        name:
          description: Name of the currency, e.g., Bitcoin, Ethereum, etc.
          type: string
        need_memo:
          description: Indicates if additional Memo information is required, as needed
            by some currencies or exchanges
          type: boolean
        network:
          description: Associated network, e.g., Bitcoin, Ethereum, etc.
          type: string
      required:
      - can_deposit
      - can_transfer
      - can_withdraw
      - code
      - fee
      - fee_currency
      - id
      - max_fee
      - max_fee_for_ct_addr
      - max_withdraw_amount
      - min_confirmations
      - min_deposit_amount
      - min_fee
      - min_fee_for_ct_addr
      - min_withdraw_amount
      - name
      - need_memo
      - network
      type: object
    CurrencyPair:
      example:
        base_currency: base_currency
        to_currency: to_currency
      properties:
        base_currency:
          description: The currency to be converted from
          maxLength: 100
          minLength: 1
          type: string
        to_currency:
          description: The currency to be converted to.
          maxLength: 100
          minLength: 1
          type: string
      required:
      - base_currency
      - to_currency
      type: object
    CursorPage-Account:
      example:
        prev_cursor: prev_cursor
        next_cursor: next_cursor
        has_next: true
        items:
        - locked_balance: locked_balance
          wallet_id: wallet_id
          in_transit_balance: in_transit_balance
          balance: balance
          currency: currency
          id: id
        - locked_balance: locked_balance
          wallet_id: wallet_id
          in_transit_balance: in_transit_balance
          balance: balance
          currency: currency
          id: id
      properties:
        has_next:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/Account'
          type: array
        next_cursor:
          type: string
        prev_cursor:
          type: string
      required:
      - has_next
      - items
      type: object
    CursorPage-Address:
      example:
        prev_cursor: prev_cursor
        next_cursor: next_cursor
        has_next: true
        items:
        - address: address
          type: type
          network: network
        - address: address
          type: type
          network: network
      properties:
        has_next:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/Address'
          type: array
        next_cursor:
          type: string
        prev_cursor:
          type: string
      required:
      - has_next
      - items
      type: object
    CursorPage-ChainNetwork:
      example:
        prev_cursor: prev_cursor
        next_cursor: next_cursor
        has_next: true
        items:
        - icon_url: icon_url
          network_id: network_id
          name: name
          explorer_block_url: explorer_block_url
          id: id
          explorer_tx_url: explorer_tx_url
          explorer_address_url: explorer_address_url
          network: network
        - icon_url: icon_url
          network_id: network_id
          name: name
          explorer_block_url: explorer_block_url
          id: id
          explorer_tx_url: explorer_tx_url
          explorer_address_url: explorer_address_url
          network: network
      properties:
        has_next:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/ChainNetwork'
          type: array
        next_cursor:
          type: string
        prev_cursor:
          type: string
      required:
      - has_next
      - items
      type: object
    CursorPage-Currency:
      example:
        prev_cursor: prev_cursor
        next_cursor: next_cursor
        has_next: true
        items:
        - symbol: symbol
          code: code
          need_memo: true
          precision: 1
          can_deposit: true
          contract_address: contract_address
          networks:
          - code: code
            need_memo: true
            fee: fee
            fee_currency: fee_currency
            can_deposit: true
            contract_address: contract_address
            min_fee_for_ct_addr: min_fee_for_ct_addr
            min_withdraw_amount: min_withdraw_amount
            network: network
            max_withdraw_amount: max_withdraw_amount
            min_collect_amount: min_collect_amount
            max_fee_for_ct_addr: max_fee_for_ct_addr
            min_fee: min_fee
            name: name
            can_withdraw: true
            id: id
            can_transfer: true
            min_deposit_amount: min_deposit_amount
            max_fee: max_fee
            min_confirmations: 6
          - code: code
            need_memo: true
            fee: fee
            fee_currency: fee_currency
            can_deposit: true
            contract_address: contract_address
            min_fee_for_ct_addr: min_fee_for_ct_addr
            min_withdraw_amount: min_withdraw_amount
            network: network
            max_withdraw_amount: max_withdraw_amount
            min_collect_amount: min_collect_amount
            max_fee_for_ct_addr: max_fee_for_ct_addr
            min_fee: min_fee
            name: name
            can_withdraw: true
            id: id
            can_transfer: true
            min_deposit_amount: min_deposit_amount
            max_fee: max_fee
            min_confirmations: 6
          min_fee_for_ct_addr: min_fee_for_ct_addr
          min_withdraw_amount: min_withdraw_amount
          max_withdraw_amount: max_withdraw_amount
          rated: true
          decimals: 0
          max_fee_for_ct_addr: max_fee_for_ct_addr
          min_fee: min_fee
          name: name
          logo: logo
          can_withdraw: true
          can_transfer: true
          min_deposit_amount: min_deposit_amount
          max_fee: max_fee
        - symbol: symbol
          code: code
          need_memo: true
          precision: 1
          can_deposit: true
          contract_address: contract_address
          networks:
          - code: code
            need_memo: true
            fee: fee
            fee_currency: fee_currency
            can_deposit: true
            contract_address: contract_address
            min_fee_for_ct_addr: min_fee_for_ct_addr
            min_withdraw_amount: min_withdraw_amount
            network: network
            max_withdraw_amount: max_withdraw_amount
            min_collect_amount: min_collect_amount
            max_fee_for_ct_addr: max_fee_for_ct_addr
            min_fee: min_fee
            name: name
            can_withdraw: true
            id: id
            can_transfer: true
            min_deposit_amount: min_deposit_amount
            max_fee: max_fee
            min_confirmations: 6
          - code: code
            need_memo: true
            fee: fee
            fee_currency: fee_currency
            can_deposit: true
            contract_address: contract_address
            min_fee_for_ct_addr: min_fee_for_ct_addr
            min_withdraw_amount: min_withdraw_amount
            network: network
            max_withdraw_amount: max_withdraw_amount
            min_collect_amount: min_collect_amount
            max_fee_for_ct_addr: max_fee_for_ct_addr
            min_fee: min_fee
            name: name
            can_withdraw: true
            id: id
            can_transfer: true
            min_deposit_amount: min_deposit_amount
            max_fee: max_fee
            min_confirmations: 6
          min_fee_for_ct_addr: min_fee_for_ct_addr
          min_withdraw_amount: min_withdraw_amount
          max_withdraw_amount: max_withdraw_amount
          rated: true
          decimals: 0
          max_fee_for_ct_addr: max_fee_for_ct_addr
          min_fee: min_fee
          name: name
          logo: logo
          can_withdraw: true
          can_transfer: true
          min_deposit_amount: min_deposit_amount
          max_fee: max_fee
      properties:
        has_next:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/Currency'
          type: array
        next_cursor:
          type: string
        prev_cursor:
          type: string
      required:
      - has_next
      - items
      type: object
    CursorPage-Endpoint:
      example:
        prev_cursor: prev_cursor
        next_cursor: next_cursor
        has_next: true
        items:
        - headers:
            key: headers
          uid: uid
          metadata:
            key: ""
          created_at: created_at
          description: description
          disabled: true
          filter_types:
          - filter_types
          - filter_types
          id: id
          url: url
        - headers:
            key: headers
          uid: uid
          metadata:
            key: ""
          created_at: created_at
          description: description
          disabled: true
          filter_types:
          - filter_types
          - filter_types
          id: id
          url: url
      properties:
        has_next:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/Endpoint'
          type: array
        next_cursor:
          type: string
        prev_cursor:
          type: string
      required:
      - has_next
      - items
      type: object
    CursorPage-Transaction:
      example:
        prev_cursor: prev_cursor
        next_cursor: next_cursor
        has_next: true
        items:
        - amount: amount
          fee_currency: fee_currency
          created_at: created_at
          to_address: to_address
          avatar: avatar
          network: network
          fee_amount: fee_amount
          wallet_id: wallet_id
          currency: currency
          id: id
          from_address: from_address
          gateway: gateway
          direction: ""
          status: ""
        - amount: amount
          fee_currency: fee_currency
          created_at: created_at
          to_address: to_address
          avatar: avatar
          network: network
          fee_amount: fee_amount
          wallet_id: wallet_id
          currency: currency
          id: id
          from_address: from_address
          gateway: gateway
          direction: ""
          status: ""
      properties:
        has_next:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
        next_cursor:
          type: string
        prev_cursor:
          type: string
      required:
      - has_next
      - items
      type: object
    CursorPage-Wallet:
      example:
        prev_cursor: prev_cursor
        next_cursor: next_cursor
        has_next: true
        items:
        - uid: uid
          name: name
          created_at: created_at
          id: id
        - uid: uid
          name: name
          created_at: created_at
          id: id
      properties:
        has_next:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/Wallet'
          type: array
        next_cursor:
          type: string
        prev_cursor:
          type: string
      required:
      - has_next
      - items
      type: object
    CursorPage-WebhookEvent:
      example:
        prev_cursor: prev_cursor
        next_cursor: next_cursor
        has_next: true
        items:
        - event_type: event_type
          payload:
            key: ""
          id: id
          timestamp: timestamp
        - event_type: event_type
          payload:
            key: ""
          id: id
          timestamp: timestamp
      properties:
        has_next:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/WebhookEvent'
          type: array
        next_cursor:
          type: string
        prev_cursor:
          type: string
      required:
      - has_next
      - items
      type: object
    DeleteWebhookEndpointResponse:
      example:
        success: true
      properties:
        success:
          description: The success of the webhook endpoint
          type: boolean
      required:
      - success
      type: object
    Endpoint:
      example:
        headers:
          key: headers
        uid: uid
        metadata:
          key: ""
        created_at: created_at
        description: description
        disabled: true
        filter_types:
        - filter_types
        - filter_types
        id: id
        url: url
      properties:
        created_at:
          description: The created at of the webhook endpoint
          type: string
        description:
          description: The description of the webhook endpoint
          type: string
        disabled:
          description: The disabled of the webhook endpoint
          type: boolean
        filter_types:
          description: The filter event types of the webhook endpoint
          items:
            type: string
          type: array
        headers:
          additionalProperties:
            type: string
          description: The headers of the webhook endpoint
          type: object
        id:
          description: The id of the webhook endpoint
          type: string
        metadata:
          additionalProperties: {}
          description: The metadata of the webhook endpoint
          type: object
        uid:
          description: The uid of the webhook endpoint
          type: string
        url:
          description: The url of the webhook endpoint
          type: string
      required:
      - created_at
      - description
      - disabled
      - filter_types
      - id
      - url
      type: object
    Error:
      properties:
        code:
          description: error code
          type: integer
        msg:
          description: error message
          type: string
      required:
      - code
      - msg
      type: object
    EstimateResponse:
      example:
        base_currency: base_currency
        to_amount: to_amount
        rate: 0.8008281904610115
        base_amount: base_amount
        to_currency: to_currency
      properties:
        base_amount:
          description: The amount of the base currency you want to convert
          type: string
        base_currency:
          description: The currency code of the base currency that you want to convert
            from
          type: string
        rate:
          description: The exchange rate from the base currency to the target currency
          type: number
        to_amount:
          description: The amount of the target currency you will receive after the
            conversion
          type: string
        to_currency:
          description: The currency code of the target currency that you want to convert
            to
          type: string
      required:
      - base_amount
      - base_currency
      - rate
      - to_amount
      - to_currency
      type: object
    EventType:
      example:
        description: description
        eventType: eventType
      properties:
        description:
          description: The description of the webhook event type
          type: string
        eventType:
          description: The type of the webhook event
          type: string
      required:
      - description
      - eventType
      type: object
    GetRatesRequest:
      example:
        pairs:
        - base_currency: base_currency
          to_currency: to_currency
        - base_currency: base_currency
          to_currency: to_currency
        - base_currency: base_currency
          to_currency: to_currency
        - base_currency: base_currency
          to_currency: to_currency
        - base_currency: base_currency
          to_currency: to_currency
      properties:
        pairs:
          items:
            $ref: '#/components/schemas/CurrencyPair'
          maxItems: 100
          minItems: 1
          type: array
      required:
      - pairs
      type: object
    GetRatesResponse:
      example:
        rates:
        - rate: 0.8008281904610115
          pair:
            base_currency: base_currency
            to_currency: to_currency
        - rate: 0.8008281904610115
          pair:
            base_currency: base_currency
            to_currency: to_currency
      properties:
        rates:
          items:
            $ref: '#/components/schemas/Rate'
          type: array
      required:
      - rates
      type: object
    Rate:
      example:
        rate: 0.8008281904610115
        pair:
          base_currency: base_currency
          to_currency: to_currency
      properties:
        pair:
          $ref: '#/components/schemas/CurrencyPair'
        rate:
          description: The exchange rate between the `BaseCurrency` and `ToCurrency`
          type: number
      required:
      - pair
      - rate
      type: object
    ResendWebhookEventRequest:
      example:
        event_id: event_id
        endpoint_id: endpoint_id
      properties:
        endpoint_id:
          description: The endpoint id of the webhook event
          type: string
        event_id:
          description: The id of the webhook event
          type: string
      required:
      - endpoint_id
      - event_id
      type: object
    ResendWebhookEventResponse:
      example:
        success: true
      properties:
        success:
          description: The success of the webhook event
          type: boolean
      required:
      - success
      type: object
    SweepAddressRequest:
      example:
        amount: amount
        currency: currency
      properties:
        amount:
          description: amount in smallest unit to be swept, if not provided, all funds
            will be swept
          type: string
        currency:
          description: currency to be swept
          type: string
      required:
      - currency
      type: object
    SweepAddressResponse:
      example:
        tx_id: tx_id
      properties:
        tx_id:
          description: transaction id
          type: string
      type: object
    Transaction:
      example:
        amount: amount
        fee_currency: fee_currency
        created_at: created_at
        to_address: to_address
        avatar: avatar
        network: network
        fee_amount: fee_amount
        wallet_id: wallet_id
        currency: currency
        id: id
        from_address: from_address
        gateway: gateway
        direction: ""
        status: ""
      properties:
        amount:
          description: The total amount of money involved in the transaction.
          type: string
        avatar:
          description: A URL or path to an avatar image associated with the transaction,
            often used to visually represent the transaction's source or recipient.
          type: string
        created_at:
          description: The date and time when the transaction was created.
          type: string
        currency:
          description: The code of currency used in the transaction (e.g., TON, USDT,
            USD, EUR, etc.).
          type: string
        direction:
          allOf:
          - $ref: '#/components/schemas/TransactionDirection'
          description: Indicates the flow of the transaction, typically whether it
            is incoming or outgoing.
        fee_amount:
          description: The amount of fee
          type: string
        fee_currency:
          description: The currency of fee
          type: string
        from_address:
          description: The address of the sender.
          type: string
        gateway:
          description: The payment gateway or platform used to process the transaction.
          type: string
        id:
          description: A unique identifier for the transaction.
          type: string
        network:
          description: The blockchain network on which the transaction takes place.
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/TransactionStatus'
          description: The current status of the transaction.
        to_address:
          description: The address of the recipient.
          type: string
        wallet_id:
          description: The ID of the wallet associated with the transaction.
          type: string
      required:
      - amount
      - avatar
      - created_at
      - currency
      - direction
      - fee_amount
      - fee_currency
      - from_address
      - gateway
      - id
      - network
      - status
      - to_address
      - wallet_id
      type: object
    TransactionDirection:
      enum:
      - OUT
      - IN
      type: string
      x-enum-varnames:
      - TransactionDirectionOut
      - TransactionDirectionIn
    TransactionStatus:
      enum:
      - PROCESSING
      - CANCELED
      - FAILED
      - SUCCEED
      type: string
      x-enum-varnames:
      - TransactionStatusProcessing
      - TransactionStatusCanceled
      - TransactionStatusFailed
      - TransactionStatusSucceed
    UpdateEndpoint:
      example:
        headers:
          key: headers
        uid: uid
        metadata:
          key: ""
        description: description
        disabled: true
        filter_types:
        - filter_types
        - filter_types
        url: url
      properties:
        description:
          description: The description of the webhook endpoint
          type: string
        disabled:
          description: The disabled of the webhook endpoint
          type: boolean
        filter_types:
          description: The filter event types of the webhook endpoint
          items:
            type: string
          type: array
        headers:
          additionalProperties:
            type: string
          description: The headers of the webhook endpoint
          type: object
        metadata:
          additionalProperties: {}
          description: The metadata of the webhook endpoint
          type: object
        uid:
          description: The uid of the webhook endpoint
          type: string
        url:
          description: The url of the webhook endpoint
          type: string
      required:
      - filter_types
      type: object
    UpdateWalletRequest:
      example:
        uid: uid
        name: name
      properties:
        name:
          description: Wallet Name
          type: string
        uid:
          description: Custom ID
          type: string
      type: object
    Wallet:
      example:
        uid: uid
        name: name
        created_at: created_at
        id: id
      properties:
        created_at:
          description: Created time
          type: string
        id:
          description: Wallet id
          type: string
        name:
          description: Wallet name
          type: string
        uid:
          description: External unique ID
          type: string
      required:
      - created_at
      - id
      - name
      - uid
      type: object
    WebhookEvent:
      example:
        event_type: event_type
        payload:
          key: ""
        id: id
        timestamp: timestamp
      properties:
        event_type:
          description: The type of the webhook event
          type: string
        id:
          description: The id of the webhook event
          type: string
        payload:
          additionalProperties: {}
          description: The payload of the webhook event
          type: object
        timestamp:
          description: The timestamp of the webhook event
          type: string
      required:
      - event_type
      - id
      - payload
      - timestamp
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-Api-Key
      type: apiKey
    SignatureAuth:
      in: header
      name: X-Signature
      type: apiKey

