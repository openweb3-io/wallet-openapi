/*
 * Wallet OpenAPI Documentation
 * This is a custody wallet service openapi server.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.openweb3.wallet.internal.api;

import io.openweb3.wallet.internal.ApiException;
import io.openweb3.wallet.models.CreateEndpoint;
import io.openweb3.wallet.models.CursorPageEndpoint;
import io.openweb3.wallet.models.Endpoint;
import io.openweb3.wallet.models.Error;
import io.openweb3.wallet.models.UpdateEndpoint;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WebhookEndpointsApi
 */
@Ignore
public class WebhookEndpointsApiTest {

    private final WebhookEndpointsApi api = new WebhookEndpointsApi();

    
    /**
     * Create webhook endpoint
     *
     * Create a webhook endpoint
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1WebhooksCreateTest() throws ApiException {
        CreateEndpoint createEndpoint = null;
        Endpoint response = api.v1WebhooksCreate(createEndpoint);

        // TODO: test validations
    }
    
    /**
     * Delete webhook endpoint
     *
     * Delete specific webhook endpoint
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1WebhooksDeleteTest() throws ApiException {
        String endpointId = null;
        Endpoint response = api.v1WebhooksDelete(endpointId);

        // TODO: test validations
    }
    
    /**
     * List webhook endpoints
     *
     * List webhook endpoints
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1WebhooksListTest() throws ApiException {
        String cursor = null;
        Integer limit = null;
        CursorPageEndpoint response = api.v1WebhooksList(cursor, limit);

        // TODO: test validations
    }
    
    /**
     * Get webhook endpoint
     *
     * Get specific webhook endpoint
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1WebhooksRetrieveTest() throws ApiException {
        String endpointId = null;
        Endpoint response = api.v1WebhooksRetrieve(endpointId);

        // TODO: test validations
    }
    
    /**
     * Update webhook endpoint
     *
     * Update specific webhook endpoint
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1WebhooksUpdateTest() throws ApiException {
        String endpointId = null;
        UpdateEndpoint updateEndpoint = null;
        Endpoint response = api.v1WebhooksUpdate(endpointId, updateEndpoint);

        // TODO: test validations
    }
    
}
