/*
 * Wallet OpenAPI Documentation
 * This is a custody wallet service openapi server.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.openweb3.wallet.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CreateWithdrawRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T22:51:22.492502+08:00[Asia/Shanghai]")
public class CreateWithdrawRequest {
  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private String amount;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_NETWORK = "network";
  @SerializedName(SERIALIZED_NAME_NETWORK)
  private String network;

  public static final String SERIALIZED_NAME_TO_ADDRESS = "toAddress";
  @SerializedName(SERIALIZED_NAME_TO_ADDRESS)
  private String toAddress;

  public static final String SERIALIZED_NAME_WALLET_ID = "walletId";
  @SerializedName(SERIALIZED_NAME_WALLET_ID)
  private String walletId;


  public CreateWithdrawRequest amount(String amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * The amount of currency to be withdrawn
   * @return amount
  **/
  @ApiModelProperty(required = true, value = "The amount of currency to be withdrawn")

  public String getAmount() {
    return amount;
  }


  public void setAmount(String amount) {
    this.amount = amount;
  }


  public CreateWithdrawRequest currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * The code of currency to be withdrawn.
   * @return currency
  **/
  @ApiModelProperty(required = true, value = "The code of currency to be withdrawn.")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public CreateWithdrawRequest network(String network) {
    
    this.network = network;
    return this;
  }

   /**
   * The network of the currency to be withdrawn.
   * @return network
  **/
  @ApiModelProperty(required = true, value = "The network of the currency to be withdrawn.")

  public String getNetwork() {
    return network;
  }


  public void setNetwork(String network) {
    this.network = network;
  }


  public CreateWithdrawRequest toAddress(String toAddress) {
    
    this.toAddress = toAddress;
    return this;
  }

   /**
   * The recipient address where the withdrawn funds will be sent. This is usually a wallet address specific to the chosen network.
   * @return toAddress
  **/
  @ApiModelProperty(required = true, value = "The recipient address where the withdrawn funds will be sent. This is usually a wallet address specific to the chosen network.")

  public String getToAddress() {
    return toAddress;
  }


  public void setToAddress(String toAddress) {
    this.toAddress = toAddress;
  }


  public CreateWithdrawRequest walletId(String walletId) {
    
    this.walletId = walletId;
    return this;
  }

   /**
   * The ID of the wallet from which the withdrawal will be made.
   * @return walletId
  **/
  @ApiModelProperty(required = true, value = "The ID of the wallet from which the withdrawal will be made.")

  public String getWalletId() {
    return walletId;
  }


  public void setWalletId(String walletId) {
    this.walletId = walletId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateWithdrawRequest createWithdrawRequest = (CreateWithdrawRequest) o;
    return Objects.equals(this.amount, createWithdrawRequest.amount) &&
        Objects.equals(this.currency, createWithdrawRequest.currency) &&
        Objects.equals(this.network, createWithdrawRequest.network) &&
        Objects.equals(this.toAddress, createWithdrawRequest.toAddress) &&
        Objects.equals(this.walletId, createWithdrawRequest.walletId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, currency, network, toAddress, walletId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateWithdrawRequest {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    toAddress: ").append(toIndentedString(toAddress)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

