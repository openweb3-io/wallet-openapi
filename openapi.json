{
    "openapi": "3.0.0",
    "info": {
        "description": "This is a custody wallet service openapi server.",
        "title": "Wallet OpenAPI Documentation",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/api/v1/addresses": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "List of all available addresses.",
                "tags": [
                    "addresses"
                ],
                "summary": "List all addresses",
                "operationId": "v1.addresses.list",
                "parameters": [
                    {
                        "description": "The code of currency used in the transaction (e.g., TON, USDT, USD, EUR, etc.).",
                        "name": "currency",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The cursor to use for pagination.",
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The number of records to return default: 20",
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The type of address to retrieve.",
                        "name": "type",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Unique system generated identifier of the wallet",
                        "name": "walletId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CursorPage-Address"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/currencies": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Retrieve a list of all available currencies.",
                "tags": [
                    "currencies"
                ],
                "summary": "List currencies",
                "operationId": "v1.currencies.list",
                "parameters": [
                    {
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "rated",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CursorPage-Currency"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/currencies/{code}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Get currency info by currency code",
                "tags": [
                    "currencies"
                ],
                "summary": "Get Currency",
                "operationId": "v1.currencies.retrieve",
                "parameters": [
                    {
                        "description": "Currency code",
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Currency"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/exchanges": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "list exchanges",
                "tags": [
                    "exchanges"
                ],
                "summary": "list exchanges",
                "operationId": "v1.exchanges.list",
                "parameters": [
                    {
                        "description": "The cursor",
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The limit",
                        "name": "limit",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The wallet id",
                        "name": "wallet_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CursorPage-Exchange"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new exchange",
                "tags": [
                    "exchanges"
                ],
                "summary": "create exchange",
                "operationId": "v1.exchanges.create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateExchange"
                            }
                        }
                    },
                    "description": "CreateExchange",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Exchange"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/exchanges/currency_pairs": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "list currency pairs",
                "tags": [
                    "exchanges"
                ],
                "summary": "list currency pairs",
                "operationId": "v1.exchanges.currency_pairs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListExchangeCurrencyPairsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/exchanges/{exchangeId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "retrieve a specified exchange",
                "tags": [
                    "exchanges"
                ],
                "summary": "retrieve exchange",
                "operationId": "v1.exchanges.retrieve",
                "parameters": [
                    {
                        "description": "Exchange ID",
                        "name": "exchangeId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Exchange"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/exchanges/{exchangeId}/submit": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "submit a exchange",
                "tags": [
                    "exchanges"
                ],
                "summary": "submit exchange",
                "operationId": "v1.exchanges.submit",
                "parameters": [
                    {
                        "description": "Exchange ID",
                        "name": "exchangeId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Exchange"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/networks": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "List networks",
                "tags": [
                    "networks"
                ],
                "summary": "List Networks",
                "operationId": "v1.networks.list",
                "parameters": [
                    {
                        "description": "Cursor",
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limit",
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CursorPage-ChainNetwork"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/rates": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Query the latest exchange rates between different currencies.",
                "tags": [
                    "rates"
                ],
                "summary": "List rates",
                "operationId": "v1.rates.list",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetRatesRequest"
                            }
                        }
                    },
                    "description": "Request body",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetRatesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/rates/estimate": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Estimates currency exchange amounts.",
                "tags": [
                    "rates"
                ],
                "summary": "Estimates",
                "operationId": "v1.rates.estimate",
                "parameters": [
                    {
                        "description": "The amount of the base currency you want to convert",
                        "name": "base_amount",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The currency code of the base currency that you want to convert from",
                        "name": "base_currency",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    {
                        "description": "The currency code of the target currency that you want to convert to",
                        "name": "to_currency",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EstimateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/sweep/address/{address}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Sweep funds from a single address",
                "tags": [
                    "sweep funds"
                ],
                "summary": "Sweep address",
                "operationId": "v1.sweep.address",
                "parameters": [
                    {
                        "description": "Address that funds will be swept from",
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SweepAddressRequest"
                            }
                        }
                    },
                    "description": "Request",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SweepAddressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/transactions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "List transactions",
                "tags": [
                    "transactions"
                ],
                "summary": "List transactions",
                "operationId": "v1.transactions.list",
                "parameters": [
                    {
                        "description": "The type of currency involved in the transaction.",
                        "name": "currency",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "A cursor value for pagination purposes.",
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "x-enum-varnames": [
                            "TransactionDirectionOut",
                            "TransactionDirectionIn"
                        ],
                        "description": "The direction of the transaction (e.g., incoming or outgoing).",
                        "name": "direction",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "OUT",
                                "IN"
                            ]
                        }
                    },
                    {
                        "description": "The payment gateway or platform used to process the transaction.",
                        "name": "gateway",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The number of records to return default: 20",
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The blockchain network on which the transaction takes place.",
                        "name": "network",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "x-enum-varnames": [
                            "TransactionStatusProcessing",
                            "TransactionStatusCanceled",
                            "TransactionStatusFailed",
                            "TransactionStatusSucceed"
                        ],
                        "description": "The status of the transaction.",
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "PROCESSING",
                                "CANCELED",
                                "FAILED",
                                "SUCCEED"
                            ]
                        }
                    },
                    {
                        "description": "The transaction hash, which uniquely identifies a transaction on the blockchain.",
                        "name": "txhash",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Unique system generated identifier of the wallet",
                        "name": "wallet_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CursorPage-Transaction"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/transactions/transfer": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Create a transfer transaction",
                "tags": [
                    "transactions"
                ],
                "summary": "Transfer(internal)",
                "operationId": "v1.transactions.transfer",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTransferRequest"
                            }
                        }
                    },
                    "description": "Request Body",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateTransferResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/transactions/withdraw": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Create a new withdrawal request for a specified currency",
                "tags": [
                    "transactions"
                ],
                "summary": "Withdraw",
                "operationId": "v1.transactions.withdraw",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWithdrawRequest"
                            }
                        }
                    },
                    "description": "withdraw",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateWithdrawReply"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/transactions/{transactionId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Get a transaction by ID",
                "tags": [
                    "transactions"
                ],
                "summary": "Get transaction",
                "operationId": "v1.transactions.retrieve",
                "parameters": [
                    {
                        "description": "Transaction ID",
                        "name": "transactionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/wallets": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "List all wallets",
                "tags": [
                    "wallets"
                ],
                "summary": "List wallets",
                "operationId": "v1.wallets.list",
                "parameters": [
                    {
                        "description": "Cursor",
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limit",
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CursorPage-Wallet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Create a Wallet",
                "tags": [
                    "wallets"
                ],
                "summary": "Create wallet",
                "operationId": "v1.wallets.create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWalletRequest"
                            }
                        }
                    },
                    "description": "Request body",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Wallet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/wallets/{walletId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Get a wallet by ID",
                "tags": [
                    "wallets"
                ],
                "summary": "Get wallet",
                "operationId": "v1.wallets.retrieve",
                "parameters": [
                    {
                        "description": "Wallet ID",
                        "name": "walletId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Wallet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Update a Wallet",
                "tags": [
                    "wallets"
                ],
                "summary": "Update wallet",
                "operationId": "v1.wallets.update",
                "parameters": [
                    {
                        "description": "Wallet ID",
                        "name": "walletId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWalletRequest"
                            }
                        }
                    },
                    "description": "Request body",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Wallet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/wallets/{walletId}/accounts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "List wallet accounts",
                "tags": [
                    "wallets"
                ],
                "summary": "List wallet accounts",
                "operationId": "v1.wallets.listAccounts",
                "parameters": [
                    {
                        "description": "Wallet ID",
                        "name": "walletId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Cursor",
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limit",
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CursorPage-Account"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/wallets/{walletId}/deposit_address": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Get wallet's deposit address",
                "tags": [
                    "addresses"
                ],
                "summary": "Get deposit address",
                "operationId": "v1.wallets.getDepositAddress",
                "parameters": [
                    {
                        "description": "Wallet ID",
                        "name": "walletId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The code of currency used in the transaction (e.g., TON, USDT, USD, EUR, etc.).",
                        "name": "currency",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "chain network, if not specified, the default network of the currency will be used.",
                        "name": "network",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/wallets/{walletId}/deposit_addresses": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "List wallet's deposit addresses",
                "tags": [
                    "addresses"
                ],
                "summary": "List deposit addresses",
                "operationId": "v1.wallets.listDepositAddresses",
                "parameters": [
                    {
                        "description": "Wallet ID",
                        "name": "walletId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The code of currency used in the transaction (e.g., TON, USDT, USD, EUR, etc.).",
                        "name": "currency",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Cursor",
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limit, default is 20",
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "chain network, if not specified, the default network of the currency will be used.",
                        "name": "network",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CursorPage-Address"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/webhook/endpoints": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "List webhook endpoints",
                "tags": [
                    "webhook endpoints"
                ],
                "summary": "List webhook endpoints",
                "operationId": "v1.webhooks.list",
                "parameters": [
                    {
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CursorPage-Endpoint"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Create a webhook endpoint",
                "tags": [
                    "webhook endpoints"
                ],
                "summary": "Create webhook endpoint",
                "operationId": "v1.webhooks.create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateEndpoint"
                            }
                        }
                    },
                    "description": "Request body",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Endpoint"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/webhook/endpoints/{endpointId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Get specific webhook endpoint",
                "tags": [
                    "webhook endpoints"
                ],
                "summary": "Get webhook endpoint",
                "operationId": "v1.webhooks.retrieve",
                "parameters": [
                    {
                        "description": "Endpoint ID",
                        "name": "endpointId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Endpoint"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Delete specific webhook endpoint",
                "tags": [
                    "webhook endpoints"
                ],
                "summary": "Delete webhook endpoint",
                "operationId": "v1.webhooks.delete",
                "parameters": [
                    {
                        "description": "Endpoint ID",
                        "name": "endpointId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteWebhookEndpointResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Update specific webhook endpoint",
                "tags": [
                    "webhook endpoints"
                ],
                "summary": "Update webhook endpoint",
                "operationId": "v1.webhooks.update",
                "parameters": [
                    {
                        "description": "Endpoint ID",
                        "name": "endpointId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateEndpoint"
                            }
                        }
                    },
                    "description": "Request body",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Endpoint"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/webhook/event_types": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "List all webhook event types",
                "tags": [
                    "webhook event types"
                ],
                "summary": "List webhook event types",
                "operationId": "v1.webhooks.eventtypes.list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EventType"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/webhook/events": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "List webhook events",
                "tags": [
                    "webhook events"
                ],
                "summary": "List webhook events",
                "operationId": "v1.webhooks.events.list",
                "parameters": [
                    {
                        "description": "The cursor of the webhook event",
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The type of the webhook event",
                        "name": "event_types",
                        "in": "query",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The limit of the webhook event",
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CursorPage-WebhookEvent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/webhook/events/resend": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "SignatureAuth": []
                    }
                ],
                "description": "Resend a webhook event to specific endpoint",
                "tags": [
                    "webhook events"
                ],
                "summary": "Resend webhook event",
                "operationId": "v1.webhooks.events.resend",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResendWebhookEventRequest"
                            }
                        }
                    },
                    "description": "The request",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResendWebhookEventResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "ApiKeyAuth": {
                "type": "apiKey",
                "name": "X-Api-Key",
                "in": "header"
            },
            "SignatureAuth": {
                "type": "apiKey",
                "name": "X-Signature",
                "in": "header"
            }
        },
        "schemas": {
            "Account": {
                "type": "object",
                "required": [
                    "balance",
                    "currency",
                    "id",
                    "in_transit_balance",
                    "locked_balance",
                    "wallet_id"
                ],
                "properties": {
                    "balance": {
                        "description": "The current balance of the wallet",
                        "type": "string"
                    },
                    "currency": {
                        "description": "The currency associated with the wallet",
                        "type": "string"
                    },
                    "id": {
                        "description": "Account id",
                        "type": "string"
                    },
                    "in_transit_balance": {
                        "description": "The amount of the balance that is in transit",
                        "type": "string"
                    },
                    "locked_balance": {
                        "description": "The amount of the balance that is locked",
                        "type": "string"
                    },
                    "wallet_id": {
                        "description": "The wallet's ID",
                        "type": "string"
                    }
                }
            },
            "Address": {
                "type": "object",
                "required": [
                    "address",
                    "network",
                    "type"
                ],
                "properties": {
                    "address": {
                        "description": "the blockchain address.",
                        "type": "string"
                    },
                    "network": {
                        "description": "the blockchain network",
                        "type": "string"
                    },
                    "type": {
                        "description": "the type of address.",
                        "type": "string"
                    }
                }
            },
            "ChainNetwork": {
                "type": "object",
                "properties": {
                    "explorer_address_url": {
                        "type": "string"
                    },
                    "explorer_block_url": {
                        "type": "string"
                    },
                    "explorer_tx_url": {
                        "type": "string"
                    },
                    "icon_url": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "network_id": {
                        "type": "string"
                    }
                }
            },
            "CreateEndpoint": {
                "type": "object",
                "required": [
                    "filter_types",
                    "url"
                ],
                "properties": {
                    "description": {
                        "description": "The description of the webhook endpoint",
                        "type": "string"
                    },
                    "disabled": {
                        "description": "The disabled of the webhook endpoint",
                        "type": "boolean"
                    },
                    "filter_types": {
                        "description": "The filter event types of the webhook endpoint",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "headers": {
                        "description": "The headers of the webhook endpoint",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "metadata": {
                        "description": "The metadata of the webhook endpoint",
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "uid": {
                        "description": "The uid of the webhook endpoint",
                        "type": "string"
                    },
                    "url": {
                        "description": "The url of the webhook endpoint",
                        "type": "string"
                    }
                }
            },
            "CreateExchange": {
                "type": "object",
                "required": [
                    "fiat_currency",
                    "from_amount",
                    "from_currency",
                    "to_currency",
                    "wallet_id"
                ],
                "properties": {
                    "fiat_currency": {
                        "description": "The currency code of fiat currency, e.g.: USD",
                        "type": "string"
                    },
                    "from_amount": {
                        "description": "The amount of the source currency to be exchange, e.g.: 100000",
                        "type": "string"
                    },
                    "from_currency": {
                        "description": "The currency code of source currency, e.g.: TON",
                        "type": "string"
                    },
                    "to_currency": {
                        "description": "The currency code of target currency, e.g.: USDT",
                        "type": "string"
                    },
                    "wallet_id": {
                        "description": "The wallet id",
                        "type": "string"
                    }
                }
            },
            "CreateTransferRequest": {
                "type": "object",
                "required": [
                    "amount",
                    "currency",
                    "from",
                    "to"
                ],
                "properties": {
                    "amount": {
                        "description": "The amount of currency to be transferred",
                        "type": "string"
                    },
                    "currency": {
                        "description": "The code of currency to be transferred",
                        "type": "string"
                    },
                    "from": {
                        "description": "The ID of the wallet from which the transfer will be made",
                        "type": "string"
                    },
                    "to": {
                        "description": "The ID of the wallet to which the transfer will be made",
                        "type": "string"
                    }
                }
            },
            "CreateTransferResponse": {
                "type": "object",
                "required": [
                    "transfer_id"
                ],
                "properties": {
                    "transfer_id": {
                        "type": "string"
                    }
                }
            },
            "CreateWalletRequest": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "Wallet Name",
                        "type": "string"
                    },
                    "uid": {
                        "description": "Custom ID",
                        "type": "string"
                    }
                }
            },
            "CreateWithdrawReply": {
                "type": "object",
                "required": [
                    "transaction_id"
                ],
                "properties": {
                    "transaction_id": {
                        "type": "string"
                    }
                }
            },
            "CreateWithdrawRequest": {
                "type": "object",
                "required": [
                    "amount",
                    "currency",
                    "network",
                    "to_address",
                    "wallet_id"
                ],
                "properties": {
                    "amount": {
                        "description": "The amount of currency to be withdrawn",
                        "type": "string"
                    },
                    "currency": {
                        "description": "The code of currency to be withdrawn.",
                        "type": "string"
                    },
                    "fee": {
                        "description": "The fee of the withdrawal",
                        "type": "string"
                    },
                    "fee_currency": {
                        "description": "The currency of fee",
                        "type": "string"
                    },
                    "network": {
                        "description": "The network of the currency to be withdrawn.",
                        "type": "string"
                    },
                    "to_address": {
                        "description": "The recipient address where the withdrawn funds will be sent. This is usually a wallet address specific to the chosen network.",
                        "type": "string"
                    },
                    "wallet_id": {
                        "description": "The ID of the wallet from which the withdrawal will be made.",
                        "type": "string"
                    }
                }
            },
            "Currency": {
                "type": "object",
                "required": [
                    "can_deposit",
                    "can_transfer",
                    "can_withdraw",
                    "code",
                    "decimals",
                    "logo",
                    "max_fee",
                    "max_fee_for_ct_addr",
                    "max_withdraw_amount",
                    "min_deposit_amount",
                    "min_fee",
                    "min_fee_for_ct_addr",
                    "min_withdraw_amount",
                    "name",
                    "need_memo",
                    "networks",
                    "precision",
                    "rated",
                    "symbol"
                ],
                "properties": {
                    "can_deposit": {
                        "description": "Is it depositable on-chain",
                        "type": "boolean"
                    },
                    "can_transfer": {
                        "description": "Is it transferable within the platform",
                        "type": "boolean"
                    },
                    "can_withdraw": {
                        "description": "Is it withdrawable on-chain",
                        "type": "boolean"
                    },
                    "code": {
                        "description": "Currency code identifier",
                        "type": "string"
                    },
                    "contract_address": {
                        "description": "Contract address (for token contracts, if applicable)",
                        "type": "string"
                    },
                    "decimals": {
                        "description": "Decimal precision",
                        "type": "integer"
                    },
                    "logo": {
                        "description": "Currency logo URL",
                        "type": "string"
                    },
                    "max_fee": {
                        "description": "Maximum fee",
                        "type": "string"
                    },
                    "max_fee_for_ct_addr": {
                        "description": "Maximum fee for contract addresses",
                        "type": "string"
                    },
                    "max_withdraw_amount": {
                        "description": "Maximum withdraw amount per transaction",
                        "type": "string"
                    },
                    "min_deposit_amount": {
                        "description": "Minimum deposit amount per transaction",
                        "type": "string"
                    },
                    "min_fee": {
                        "description": "Minimum fee",
                        "type": "string"
                    },
                    "min_fee_for_ct_addr": {
                        "description": "Minimum fee for contract addresses",
                        "type": "string"
                    },
                    "min_withdraw_amount": {
                        "description": "Minimum withdraw amount per transaction",
                        "type": "string"
                    },
                    "name": {
                        "description": "Currency name",
                        "type": "string"
                    },
                    "need_memo": {
                        "description": "Does it require a memo/note for transactions",
                        "type": "boolean"
                    },
                    "networks": {
                        "description": "Networks information",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CurrencyNetwork"
                        }
                    },
                    "precision": {
                        "description": "The number of decimals used by the currency",
                        "type": "integer"
                    },
                    "rated": {
                        "description": "Participate in exchange rate calculation",
                        "type": "boolean"
                    },
                    "symbol": {
                        "description": "Currency symbol",
                        "type": "string"
                    }
                }
            },
            "CurrencyNetwork": {
                "type": "object",
                "required": [
                    "can_deposit",
                    "can_transfer",
                    "can_withdraw",
                    "code",
                    "fee",
                    "fee_currency",
                    "id",
                    "max_fee",
                    "max_fee_for_ct_addr",
                    "max_withdraw_amount",
                    "min_confirmations",
                    "min_deposit_amount",
                    "min_fee",
                    "min_fee_for_ct_addr",
                    "min_withdraw_amount",
                    "name",
                    "need_memo",
                    "network"
                ],
                "properties": {
                    "can_deposit": {
                        "description": "Indicates if on-chain deposits are allowed",
                        "type": "boolean"
                    },
                    "can_transfer": {
                        "description": "Indicates if internal transfers are permitted",
                        "type": "boolean"
                    },
                    "can_withdraw": {
                        "description": "Indicates if on-chain withdrawals are allowed",
                        "type": "boolean"
                    },
                    "code": {
                        "description": "Currency code",
                        "type": "string"
                    },
                    "contract_address": {
                        "description": "Contract address for tokens based on smart contracts, such as ERC-20",
                        "type": "string"
                    },
                    "fee": {
                        "description": "Transaction fee",
                        "type": "string"
                    },
                    "fee_currency": {
                        "description": "Transaction fee currency",
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "max_fee": {
                        "description": "Maximum transaction fee",
                        "type": "string"
                    },
                    "max_fee_for_ct_addr": {
                        "description": "Maximum transaction fee for contract addresses",
                        "type": "string"
                    },
                    "max_withdraw_amount": {
                        "description": "Maximum amount for a single on-chain withdrawal",
                        "type": "string"
                    },
                    "min_collect_amount": {
                        "description": "Minimum amount for collection, i.e., the minimum amount to aggregate small balances to a single address",
                        "type": "string"
                    },
                    "min_confirmations": {
                        "description": "Minimum number of confirmations required, indicating the number of block confirmations needed for a transaction to be considered valid",
                        "type": "integer"
                    },
                    "min_deposit_amount": {
                        "description": "Minimum amount for a single deposit",
                        "type": "string"
                    },
                    "min_fee": {
                        "description": "Minimum transaction fee",
                        "type": "string"
                    },
                    "min_fee_for_ct_addr": {
                        "description": "Minimum transaction fee for contract addresses",
                        "type": "string"
                    },
                    "min_withdraw_amount": {
                        "description": "Minimum amount for a single on-chain withdrawal",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the currency, e.g., Bitcoin, Ethereum, etc.",
                        "type": "string"
                    },
                    "need_memo": {
                        "description": "Indicates if additional Memo information is required, as needed by some currencies or exchanges",
                        "type": "boolean"
                    },
                    "network": {
                        "description": "Associated network, e.g., Bitcoin, Ethereum, etc.",
                        "type": "string"
                    }
                }
            },
            "CurrencyPair": {
                "type": "object",
                "required": [
                    "base_currency",
                    "to_currency"
                ],
                "properties": {
                    "base_currency": {
                        "description": "The currency to be converted from",
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1
                    },
                    "to_currency": {
                        "description": "The currency to be converted to.",
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1
                    }
                }
            },
            "CursorPage-Account": {
                "type": "object",
                "required": [
                    "has_next",
                    "items"
                ],
                "properties": {
                    "has_next": {
                        "type": "boolean"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Account"
                        }
                    },
                    "next_cursor": {
                        "type": "string"
                    },
                    "prev_cursor": {
                        "type": "string"
                    }
                }
            },
            "CursorPage-Address": {
                "type": "object",
                "required": [
                    "has_next",
                    "items"
                ],
                "properties": {
                    "has_next": {
                        "type": "boolean"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Address"
                        }
                    },
                    "next_cursor": {
                        "type": "string"
                    },
                    "prev_cursor": {
                        "type": "string"
                    }
                }
            },
            "CursorPage-ChainNetwork": {
                "type": "object",
                "required": [
                    "has_next",
                    "items"
                ],
                "properties": {
                    "has_next": {
                        "type": "boolean"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChainNetwork"
                        }
                    },
                    "next_cursor": {
                        "type": "string"
                    },
                    "prev_cursor": {
                        "type": "string"
                    }
                }
            },
            "CursorPage-Currency": {
                "type": "object",
                "required": [
                    "has_next",
                    "items"
                ],
                "properties": {
                    "has_next": {
                        "type": "boolean"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Currency"
                        }
                    },
                    "next_cursor": {
                        "type": "string"
                    },
                    "prev_cursor": {
                        "type": "string"
                    }
                }
            },
            "CursorPage-Endpoint": {
                "type": "object",
                "required": [
                    "has_next",
                    "items"
                ],
                "properties": {
                    "has_next": {
                        "type": "boolean"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Endpoint"
                        }
                    },
                    "next_cursor": {
                        "type": "string"
                    },
                    "prev_cursor": {
                        "type": "string"
                    }
                }
            },
            "CursorPage-Exchange": {
                "type": "object",
                "required": [
                    "has_next",
                    "items"
                ],
                "properties": {
                    "has_next": {
                        "type": "boolean"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Exchange"
                        }
                    },
                    "next_cursor": {
                        "type": "string"
                    },
                    "prev_cursor": {
                        "type": "string"
                    }
                }
            },
            "CursorPage-Transaction": {
                "type": "object",
                "required": [
                    "has_next",
                    "items"
                ],
                "properties": {
                    "has_next": {
                        "type": "boolean"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Transaction"
                        }
                    },
                    "next_cursor": {
                        "type": "string"
                    },
                    "prev_cursor": {
                        "type": "string"
                    }
                }
            },
            "CursorPage-Wallet": {
                "type": "object",
                "required": [
                    "has_next",
                    "items"
                ],
                "properties": {
                    "has_next": {
                        "type": "boolean"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Wallet"
                        }
                    },
                    "next_cursor": {
                        "type": "string"
                    },
                    "prev_cursor": {
                        "type": "string"
                    }
                }
            },
            "CursorPage-WebhookEvent": {
                "type": "object",
                "required": [
                    "has_next",
                    "items"
                ],
                "properties": {
                    "has_next": {
                        "type": "boolean"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WebhookEvent"
                        }
                    },
                    "next_cursor": {
                        "type": "string"
                    },
                    "prev_cursor": {
                        "type": "string"
                    }
                }
            },
            "DeleteWebhookEndpointResponse": {
                "type": "object",
                "required": [
                    "success"
                ],
                "properties": {
                    "success": {
                        "description": "The success of the webhook endpoint",
                        "type": "boolean"
                    }
                }
            },
            "Endpoint": {
                "type": "object",
                "required": [
                    "created_at",
                    "description",
                    "disabled",
                    "filter_types",
                    "id",
                    "url"
                ],
                "properties": {
                    "created_at": {
                        "description": "The created at of the webhook endpoint",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the webhook endpoint",
                        "type": "string"
                    },
                    "disabled": {
                        "description": "The disabled of the webhook endpoint",
                        "type": "boolean"
                    },
                    "filter_types": {
                        "description": "The filter event types of the webhook endpoint",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "headers": {
                        "description": "The headers of the webhook endpoint",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "description": "The id of the webhook endpoint",
                        "type": "string"
                    },
                    "metadata": {
                        "description": "The metadata of the webhook endpoint",
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "uid": {
                        "description": "The uid of the webhook endpoint",
                        "type": "string"
                    },
                    "url": {
                        "description": "The url of the webhook endpoint",
                        "type": "string"
                    }
                }
            },
            "Error": {
                "type": "object",
                "required": [
                    "code",
                    "msg"
                ],
                "properties": {
                    "code": {
                        "description": "error code",
                        "type": "integer"
                    },
                    "msg": {
                        "description": "error message",
                        "type": "string"
                    }
                }
            },
            "EstimateResponse": {
                "type": "object",
                "required": [
                    "base_amount",
                    "base_currency",
                    "rate",
                    "to_amount",
                    "to_currency"
                ],
                "properties": {
                    "base_amount": {
                        "description": "The amount of the base currency you want to convert",
                        "type": "string"
                    },
                    "base_currency": {
                        "description": "The currency code of the base currency that you want to convert from",
                        "type": "string"
                    },
                    "rate": {
                        "description": "The exchange rate from the base currency to the target currency",
                        "type": "number"
                    },
                    "to_amount": {
                        "description": "The amount of the target currency you will receive after the conversion",
                        "type": "string"
                    },
                    "to_currency": {
                        "description": "The currency code of the target currency that you want to convert to",
                        "type": "string"
                    }
                }
            },
            "EventType": {
                "type": "object",
                "required": [
                    "description",
                    "eventType"
                ],
                "properties": {
                    "description": {
                        "description": "The description of the webhook event type",
                        "type": "string"
                    },
                    "eventType": {
                        "description": "The type of the webhook event",
                        "type": "string"
                    }
                }
            },
            "Exchange": {
                "type": "object",
                "required": [
                    "created_at",
                    "fee_amount",
                    "fee_currency",
                    "fiat_currency",
                    "from_amount",
                    "from_currency",
                    "id",
                    "rate",
                    "to_amount",
                    "to_currency",
                    "ttl",
                    "updated_at",
                    "wallet_id"
                ],
                "properties": {
                    "created_at": {
                        "description": "The create time",
                        "type": "string"
                    },
                    "fee_amount": {
                        "description": "The amount of the fee charged for this exchange, denominated in the `fee_currency`",
                        "type": "string"
                    },
                    "fee_currency": {
                        "description": "The currency in which the fee is denominated. For example, 'TON'.",
                        "type": "string"
                    },
                    "fiat_currency": {
                        "description": "The currency code of fiat currency, e.g.: USD",
                        "type": "string"
                    },
                    "from_amount": {
                        "description": "The amount of the source currency being sent. For example, 0.1 TON.",
                        "type": "string"
                    },
                    "from_currency": {
                        "description": "The currency being sent. In this case, it is 'TON'.",
                        "type": "string"
                    },
                    "id": {
                        "description": "A unique identifier for the exchange.",
                        "type": "string"
                    },
                    "rate": {
                        "description": "The exchange rate applied during the exchange. For example, the rate is 7.11116.",
                        "type": "number"
                    },
                    "to_amount": {
                        "description": "The amount of the target currency received. For example, 0.711116 USDT.",
                        "type": "string"
                    },
                    "to_currency": {
                        "description": "The currency being received. In this case, it is 'USDT'.",
                        "type": "string"
                    },
                    "ttl": {
                        "description": "The validity period for the exchange",
                        "type": "integer"
                    },
                    "updated_at": {
                        "description": "The update time",
                        "type": "string"
                    },
                    "wallet_id": {
                        "description": "The walletID that the exchange belong to",
                        "type": "string"
                    }
                }
            },
            "ExchangeCurrencyPairs": {
                "type": "object",
                "properties": {
                    "from_currency": {
                        "description": "The currency code of source currency, e.g.: TON",
                        "type": "string"
                    },
                    "to_currencies": {
                        "description": "The currency code list of target currency, e.g.: USDT",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "GetRatesRequest": {
                "type": "object",
                "required": [
                    "pairs"
                ],
                "properties": {
                    "pairs": {
                        "type": "array",
                        "maxItems": 100,
                        "minItems": 1,
                        "items": {
                            "$ref": "#/components/schemas/CurrencyPair"
                        }
                    }
                }
            },
            "GetRatesResponse": {
                "type": "object",
                "required": [
                    "rates"
                ],
                "properties": {
                    "rates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Rate"
                        }
                    }
                }
            },
            "ListExchangeCurrencyPairsResponse": {
                "type": "object",
                "properties": {
                    "items": {
                        "description": "The list of currency pairs",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExchangeCurrencyPairs"
                        }
                    }
                }
            },
            "Rate": {
                "type": "object",
                "required": [
                    "pair",
                    "rate"
                ],
                "properties": {
                    "pair": {
                        "$ref": "#/components/schemas/CurrencyPair"
                    },
                    "rate": {
                        "description": "The exchange rate between the `BaseCurrency` and `ToCurrency`",
                        "type": "number"
                    }
                }
            },
            "ResendWebhookEventRequest": {
                "type": "object",
                "required": [
                    "endpoint_id",
                    "event_id"
                ],
                "properties": {
                    "endpoint_id": {
                        "description": "The endpoint id of the webhook event",
                        "type": "string"
                    },
                    "event_id": {
                        "description": "The id of the webhook event",
                        "type": "string"
                    }
                }
            },
            "ResendWebhookEventResponse": {
                "type": "object",
                "required": [
                    "success"
                ],
                "properties": {
                    "success": {
                        "description": "The success of the webhook event",
                        "type": "boolean"
                    }
                }
            },
            "SweepAddressRequest": {
                "type": "object",
                "required": [
                    "currency"
                ],
                "properties": {
                    "currency": {
                        "description": "currency to be swept",
                        "type": "string"
                    }
                }
            },
            "SweepAddressResponse": {
                "type": "object",
                "required": [
                    "tx_id"
                ],
                "properties": {
                    "tx_id": {
                        "description": "transaction id",
                        "type": "string"
                    }
                }
            },
            "Transaction": {
                "type": "object",
                "required": [
                    "amount",
                    "avatar",
                    "created_at",
                    "currency",
                    "direction",
                    "fee_amount",
                    "fee_currency",
                    "from_address",
                    "gateway",
                    "id",
                    "network",
                    "status",
                    "to_address",
                    "wallet_id"
                ],
                "properties": {
                    "amount": {
                        "description": "The total amount of money involved in the transaction.",
                        "type": "string"
                    },
                    "avatar": {
                        "description": "A URL or path to an avatar image associated with the transaction, often used to visually represent the transaction's source or recipient.",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "The date and time when the transaction was created.",
                        "type": "string"
                    },
                    "currency": {
                        "description": "The code of currency used in the transaction (e.g., TON, USDT, USD, EUR, etc.).",
                        "type": "string"
                    },
                    "direction": {
                        "description": "Indicates the flow of the transaction, typically whether it is incoming or outgoing.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TransactionDirection"
                            }
                        ]
                    },
                    "fee_amount": {
                        "description": "The amount of fee",
                        "type": "string"
                    },
                    "fee_currency": {
                        "description": "The currency of fee",
                        "type": "string"
                    },
                    "from_address": {
                        "description": "The address of the sender.",
                        "type": "string"
                    },
                    "gateway": {
                        "description": "The payment gateway or platform used to process the transaction.",
                        "type": "string"
                    },
                    "id": {
                        "description": "A unique identifier for the transaction.",
                        "type": "string"
                    },
                    "network": {
                        "description": "The blockchain network on which the transaction takes place.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The current status of the transaction.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TransactionStatus"
                            }
                        ]
                    },
                    "to_address": {
                        "description": "The address of the recipient.",
                        "type": "string"
                    },
                    "wallet_id": {
                        "description": "The ID of the wallet associated with the transaction.",
                        "type": "string"
                    }
                }
            },
            "TransactionDirection": {
                "type": "string",
                "enum": [
                    "OUT",
                    "IN"
                ],
                "x-enum-varnames": [
                    "TransactionDirectionOut",
                    "TransactionDirectionIn"
                ]
            },
            "TransactionStatus": {
                "type": "string",
                "enum": [
                    "PROCESSING",
                    "CANCELED",
                    "FAILED",
                    "SUCCEED"
                ],
                "x-enum-varnames": [
                    "TransactionStatusProcessing",
                    "TransactionStatusCanceled",
                    "TransactionStatusFailed",
                    "TransactionStatusSucceed"
                ]
            },
            "UpdateEndpoint": {
                "type": "object",
                "required": [
                    "filter_types"
                ],
                "properties": {
                    "description": {
                        "description": "The description of the webhook endpoint",
                        "type": "string"
                    },
                    "disabled": {
                        "description": "The disabled of the webhook endpoint",
                        "type": "boolean"
                    },
                    "filter_types": {
                        "description": "The filter event types of the webhook endpoint",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "headers": {
                        "description": "The headers of the webhook endpoint",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "metadata": {
                        "description": "The metadata of the webhook endpoint",
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "uid": {
                        "description": "The uid of the webhook endpoint",
                        "type": "string"
                    },
                    "url": {
                        "description": "The url of the webhook endpoint",
                        "type": "string"
                    }
                }
            },
            "UpdateWalletRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Wallet Name",
                        "type": "string"
                    },
                    "uid": {
                        "description": "Custom ID",
                        "type": "string"
                    }
                }
            },
            "Wallet": {
                "type": "object",
                "required": [
                    "created_at",
                    "id",
                    "name",
                    "uid"
                ],
                "properties": {
                    "created_at": {
                        "description": "Created time",
                        "type": "string"
                    },
                    "id": {
                        "description": "Wallet id",
                        "type": "string"
                    },
                    "name": {
                        "description": "Wallet name",
                        "type": "string"
                    },
                    "uid": {
                        "description": "External unique ID",
                        "type": "string"
                    }
                }
            },
            "WebhookEvent": {
                "type": "object",
                "required": [
                    "event_type",
                    "id",
                    "payload",
                    "timestamp"
                ],
                "properties": {
                    "event_type": {
                        "description": "The type of the webhook event",
                        "type": "string"
                    },
                    "id": {
                        "description": "The id of the webhook event",
                        "type": "string"
                    },
                    "payload": {
                        "description": "The payload of the webhook event",
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "timestamp": {
                        "description": "The timestamp of the webhook event",
                        "type": "string"
                    }
                }
            }
        }
    }
}