/*
 * Wallet OpenAPI Documentation
 *
 * This is a custody wallet service openapi server.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PageAddress struct for PageAddress
type PageAddress struct {
	Items *[]Address `json:"items,omitempty"`
	Total *int32 `json:"total,omitempty"`
}

// NewPageAddress instantiates a new PageAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPageAddress() *PageAddress {
	this := PageAddress{}
	return &this
}

// NewPageAddressWithDefaults instantiates a new PageAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPageAddressWithDefaults() *PageAddress {
	this := PageAddress{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *PageAddress) GetItems() []Address {
	if o == nil || o.Items == nil {
		var ret []Address
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageAddress) GetItemsOk() (*[]Address, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *PageAddress) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []Address and assigns it to the Items field.
func (o *PageAddress) SetItems(v []Address) {
	o.Items = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *PageAddress) GetTotal() int32 {
	if o == nil || o.Total == nil {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageAddress) GetTotalOk() (*int32, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *PageAddress) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *PageAddress) SetTotal(v int32) {
	o.Total = &v
}

func (o PageAddress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	return json.Marshal(toSerialize)
}

type NullablePageAddress struct {
	value *PageAddress
	isSet bool
}

func (v NullablePageAddress) Get() *PageAddress {
	return v.value
}

func (v *NullablePageAddress) Set(val *PageAddress) {
	v.value = val
	v.isSet = true
}

func (v NullablePageAddress) IsSet() bool {
	return v.isSet
}

func (v *NullablePageAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePageAddress(val *PageAddress) *NullablePageAddress {
	return &NullablePageAddress{value: val, isSet: true}
}

func (v NullablePageAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePageAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


