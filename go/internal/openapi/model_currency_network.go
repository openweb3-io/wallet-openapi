/*
 * Wallet OpenAPI Documentation
 *
 * This is a custody wallet service openapi server.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CurrencyNetwork struct for CurrencyNetwork
type CurrencyNetwork struct {
	// Indicates if on-chain deposits are allowed
	CanDeposit *bool `json:"can_deposit,omitempty"`
	// Indicates if internal transfers are permitted
	CanTransfer *bool `json:"can_transfer,omitempty"`
	// Indicates if on-chain withdrawals are allowed
	CanWithdraw *bool `json:"can_withdraw,omitempty"`
	// Currency code
	Code *string `json:"code,omitempty"`
	// Contract address for tokens based on smart contracts, such as ERC-20
	ContractAddress *string `json:"contract_address,omitempty"`
	Id *string `json:"id,omitempty"`
	// Maximum transaction fee
	MaxFee *string `json:"max_fee,omitempty"`
	// Maximum transaction fee for contract addresses
	MaxFeeForCtAddr *string `json:"max_fee_for_ct_addr,omitempty"`
	// Maximum amount for a single on-chain withdrawal
	MaxWithdrawAmount *string `json:"max_withdraw_amount,omitempty"`
	// Minimum amount for collection, i.e., the minimum amount to aggregate small balances to a single address
	MinCollectAmount *string `json:"min_collect_amount,omitempty"`
	// Minimum number of confirmations required, indicating the number of block confirmations needed for a transaction to be considered valid
	MinConfirmations *int32 `json:"min_confirmations,omitempty"`
	// Minimum amount for a single deposit
	MinDepositAmount *string `json:"min_deposit_amount,omitempty"`
	// Minimum transaction fee
	MinFee *string `json:"min_fee,omitempty"`
	// Minimum transaction fee for contract addresses
	MinFeeForCtAddr *string `json:"min_fee_for_ct_addr,omitempty"`
	// Minimum amount for a single on-chain withdrawal
	MinWithdrawAmount *string `json:"min_withdraw_amount,omitempty"`
	// Name of the currency, e.g., Bitcoin, Ethereum, etc.
	Name *string `json:"name,omitempty"`
	// Indicates if additional Memo information is required, as needed by some currencies or exchanges
	NeedMemo *bool `json:"need_memo,omitempty"`
	// Associated network, e.g., Bitcoin, Ethereum, etc.
	Network *string `json:"network,omitempty"`
}

// NewCurrencyNetwork instantiates a new CurrencyNetwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCurrencyNetwork() *CurrencyNetwork {
	this := CurrencyNetwork{}
	return &this
}

// NewCurrencyNetworkWithDefaults instantiates a new CurrencyNetwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCurrencyNetworkWithDefaults() *CurrencyNetwork {
	this := CurrencyNetwork{}
	return &this
}

// GetCanDeposit returns the CanDeposit field value if set, zero value otherwise.
func (o *CurrencyNetwork) GetCanDeposit() bool {
	if o == nil || o.CanDeposit == nil {
		var ret bool
		return ret
	}
	return *o.CanDeposit
}

// GetCanDepositOk returns a tuple with the CanDeposit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrencyNetwork) GetCanDepositOk() (*bool, bool) {
	if o == nil || o.CanDeposit == nil {
		return nil, false
	}
	return o.CanDeposit, true
}

// HasCanDeposit returns a boolean if a field has been set.
func (o *CurrencyNetwork) HasCanDeposit() bool {
	if o != nil && o.CanDeposit != nil {
		return true
	}

	return false
}

// SetCanDeposit gets a reference to the given bool and assigns it to the CanDeposit field.
func (o *CurrencyNetwork) SetCanDeposit(v bool) {
	o.CanDeposit = &v
}

// GetCanTransfer returns the CanTransfer field value if set, zero value otherwise.
func (o *CurrencyNetwork) GetCanTransfer() bool {
	if o == nil || o.CanTransfer == nil {
		var ret bool
		return ret
	}
	return *o.CanTransfer
}

// GetCanTransferOk returns a tuple with the CanTransfer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrencyNetwork) GetCanTransferOk() (*bool, bool) {
	if o == nil || o.CanTransfer == nil {
		return nil, false
	}
	return o.CanTransfer, true
}

// HasCanTransfer returns a boolean if a field has been set.
func (o *CurrencyNetwork) HasCanTransfer() bool {
	if o != nil && o.CanTransfer != nil {
		return true
	}

	return false
}

// SetCanTransfer gets a reference to the given bool and assigns it to the CanTransfer field.
func (o *CurrencyNetwork) SetCanTransfer(v bool) {
	o.CanTransfer = &v
}

// GetCanWithdraw returns the CanWithdraw field value if set, zero value otherwise.
func (o *CurrencyNetwork) GetCanWithdraw() bool {
	if o == nil || o.CanWithdraw == nil {
		var ret bool
		return ret
	}
	return *o.CanWithdraw
}

// GetCanWithdrawOk returns a tuple with the CanWithdraw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrencyNetwork) GetCanWithdrawOk() (*bool, bool) {
	if o == nil || o.CanWithdraw == nil {
		return nil, false
	}
	return o.CanWithdraw, true
}

// HasCanWithdraw returns a boolean if a field has been set.
func (o *CurrencyNetwork) HasCanWithdraw() bool {
	if o != nil && o.CanWithdraw != nil {
		return true
	}

	return false
}

// SetCanWithdraw gets a reference to the given bool and assigns it to the CanWithdraw field.
func (o *CurrencyNetwork) SetCanWithdraw(v bool) {
	o.CanWithdraw = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *CurrencyNetwork) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrencyNetwork) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *CurrencyNetwork) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *CurrencyNetwork) SetCode(v string) {
	o.Code = &v
}

// GetContractAddress returns the ContractAddress field value if set, zero value otherwise.
func (o *CurrencyNetwork) GetContractAddress() string {
	if o == nil || o.ContractAddress == nil {
		var ret string
		return ret
	}
	return *o.ContractAddress
}

// GetContractAddressOk returns a tuple with the ContractAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrencyNetwork) GetContractAddressOk() (*string, bool) {
	if o == nil || o.ContractAddress == nil {
		return nil, false
	}
	return o.ContractAddress, true
}

// HasContractAddress returns a boolean if a field has been set.
func (o *CurrencyNetwork) HasContractAddress() bool {
	if o != nil && o.ContractAddress != nil {
		return true
	}

	return false
}

// SetContractAddress gets a reference to the given string and assigns it to the ContractAddress field.
func (o *CurrencyNetwork) SetContractAddress(v string) {
	o.ContractAddress = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CurrencyNetwork) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrencyNetwork) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CurrencyNetwork) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CurrencyNetwork) SetId(v string) {
	o.Id = &v
}

// GetMaxFee returns the MaxFee field value if set, zero value otherwise.
func (o *CurrencyNetwork) GetMaxFee() string {
	if o == nil || o.MaxFee == nil {
		var ret string
		return ret
	}
	return *o.MaxFee
}

// GetMaxFeeOk returns a tuple with the MaxFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrencyNetwork) GetMaxFeeOk() (*string, bool) {
	if o == nil || o.MaxFee == nil {
		return nil, false
	}
	return o.MaxFee, true
}

// HasMaxFee returns a boolean if a field has been set.
func (o *CurrencyNetwork) HasMaxFee() bool {
	if o != nil && o.MaxFee != nil {
		return true
	}

	return false
}

// SetMaxFee gets a reference to the given string and assigns it to the MaxFee field.
func (o *CurrencyNetwork) SetMaxFee(v string) {
	o.MaxFee = &v
}

// GetMaxFeeForCtAddr returns the MaxFeeForCtAddr field value if set, zero value otherwise.
func (o *CurrencyNetwork) GetMaxFeeForCtAddr() string {
	if o == nil || o.MaxFeeForCtAddr == nil {
		var ret string
		return ret
	}
	return *o.MaxFeeForCtAddr
}

// GetMaxFeeForCtAddrOk returns a tuple with the MaxFeeForCtAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrencyNetwork) GetMaxFeeForCtAddrOk() (*string, bool) {
	if o == nil || o.MaxFeeForCtAddr == nil {
		return nil, false
	}
	return o.MaxFeeForCtAddr, true
}

// HasMaxFeeForCtAddr returns a boolean if a field has been set.
func (o *CurrencyNetwork) HasMaxFeeForCtAddr() bool {
	if o != nil && o.MaxFeeForCtAddr != nil {
		return true
	}

	return false
}

// SetMaxFeeForCtAddr gets a reference to the given string and assigns it to the MaxFeeForCtAddr field.
func (o *CurrencyNetwork) SetMaxFeeForCtAddr(v string) {
	o.MaxFeeForCtAddr = &v
}

// GetMaxWithdrawAmount returns the MaxWithdrawAmount field value if set, zero value otherwise.
func (o *CurrencyNetwork) GetMaxWithdrawAmount() string {
	if o == nil || o.MaxWithdrawAmount == nil {
		var ret string
		return ret
	}
	return *o.MaxWithdrawAmount
}

// GetMaxWithdrawAmountOk returns a tuple with the MaxWithdrawAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrencyNetwork) GetMaxWithdrawAmountOk() (*string, bool) {
	if o == nil || o.MaxWithdrawAmount == nil {
		return nil, false
	}
	return o.MaxWithdrawAmount, true
}

// HasMaxWithdrawAmount returns a boolean if a field has been set.
func (o *CurrencyNetwork) HasMaxWithdrawAmount() bool {
	if o != nil && o.MaxWithdrawAmount != nil {
		return true
	}

	return false
}

// SetMaxWithdrawAmount gets a reference to the given string and assigns it to the MaxWithdrawAmount field.
func (o *CurrencyNetwork) SetMaxWithdrawAmount(v string) {
	o.MaxWithdrawAmount = &v
}

// GetMinCollectAmount returns the MinCollectAmount field value if set, zero value otherwise.
func (o *CurrencyNetwork) GetMinCollectAmount() string {
	if o == nil || o.MinCollectAmount == nil {
		var ret string
		return ret
	}
	return *o.MinCollectAmount
}

// GetMinCollectAmountOk returns a tuple with the MinCollectAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrencyNetwork) GetMinCollectAmountOk() (*string, bool) {
	if o == nil || o.MinCollectAmount == nil {
		return nil, false
	}
	return o.MinCollectAmount, true
}

// HasMinCollectAmount returns a boolean if a field has been set.
func (o *CurrencyNetwork) HasMinCollectAmount() bool {
	if o != nil && o.MinCollectAmount != nil {
		return true
	}

	return false
}

// SetMinCollectAmount gets a reference to the given string and assigns it to the MinCollectAmount field.
func (o *CurrencyNetwork) SetMinCollectAmount(v string) {
	o.MinCollectAmount = &v
}

// GetMinConfirmations returns the MinConfirmations field value if set, zero value otherwise.
func (o *CurrencyNetwork) GetMinConfirmations() int32 {
	if o == nil || o.MinConfirmations == nil {
		var ret int32
		return ret
	}
	return *o.MinConfirmations
}

// GetMinConfirmationsOk returns a tuple with the MinConfirmations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrencyNetwork) GetMinConfirmationsOk() (*int32, bool) {
	if o == nil || o.MinConfirmations == nil {
		return nil, false
	}
	return o.MinConfirmations, true
}

// HasMinConfirmations returns a boolean if a field has been set.
func (o *CurrencyNetwork) HasMinConfirmations() bool {
	if o != nil && o.MinConfirmations != nil {
		return true
	}

	return false
}

// SetMinConfirmations gets a reference to the given int32 and assigns it to the MinConfirmations field.
func (o *CurrencyNetwork) SetMinConfirmations(v int32) {
	o.MinConfirmations = &v
}

// GetMinDepositAmount returns the MinDepositAmount field value if set, zero value otherwise.
func (o *CurrencyNetwork) GetMinDepositAmount() string {
	if o == nil || o.MinDepositAmount == nil {
		var ret string
		return ret
	}
	return *o.MinDepositAmount
}

// GetMinDepositAmountOk returns a tuple with the MinDepositAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrencyNetwork) GetMinDepositAmountOk() (*string, bool) {
	if o == nil || o.MinDepositAmount == nil {
		return nil, false
	}
	return o.MinDepositAmount, true
}

// HasMinDepositAmount returns a boolean if a field has been set.
func (o *CurrencyNetwork) HasMinDepositAmount() bool {
	if o != nil && o.MinDepositAmount != nil {
		return true
	}

	return false
}

// SetMinDepositAmount gets a reference to the given string and assigns it to the MinDepositAmount field.
func (o *CurrencyNetwork) SetMinDepositAmount(v string) {
	o.MinDepositAmount = &v
}

// GetMinFee returns the MinFee field value if set, zero value otherwise.
func (o *CurrencyNetwork) GetMinFee() string {
	if o == nil || o.MinFee == nil {
		var ret string
		return ret
	}
	return *o.MinFee
}

// GetMinFeeOk returns a tuple with the MinFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrencyNetwork) GetMinFeeOk() (*string, bool) {
	if o == nil || o.MinFee == nil {
		return nil, false
	}
	return o.MinFee, true
}

// HasMinFee returns a boolean if a field has been set.
func (o *CurrencyNetwork) HasMinFee() bool {
	if o != nil && o.MinFee != nil {
		return true
	}

	return false
}

// SetMinFee gets a reference to the given string and assigns it to the MinFee field.
func (o *CurrencyNetwork) SetMinFee(v string) {
	o.MinFee = &v
}

// GetMinFeeForCtAddr returns the MinFeeForCtAddr field value if set, zero value otherwise.
func (o *CurrencyNetwork) GetMinFeeForCtAddr() string {
	if o == nil || o.MinFeeForCtAddr == nil {
		var ret string
		return ret
	}
	return *o.MinFeeForCtAddr
}

// GetMinFeeForCtAddrOk returns a tuple with the MinFeeForCtAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrencyNetwork) GetMinFeeForCtAddrOk() (*string, bool) {
	if o == nil || o.MinFeeForCtAddr == nil {
		return nil, false
	}
	return o.MinFeeForCtAddr, true
}

// HasMinFeeForCtAddr returns a boolean if a field has been set.
func (o *CurrencyNetwork) HasMinFeeForCtAddr() bool {
	if o != nil && o.MinFeeForCtAddr != nil {
		return true
	}

	return false
}

// SetMinFeeForCtAddr gets a reference to the given string and assigns it to the MinFeeForCtAddr field.
func (o *CurrencyNetwork) SetMinFeeForCtAddr(v string) {
	o.MinFeeForCtAddr = &v
}

// GetMinWithdrawAmount returns the MinWithdrawAmount field value if set, zero value otherwise.
func (o *CurrencyNetwork) GetMinWithdrawAmount() string {
	if o == nil || o.MinWithdrawAmount == nil {
		var ret string
		return ret
	}
	return *o.MinWithdrawAmount
}

// GetMinWithdrawAmountOk returns a tuple with the MinWithdrawAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrencyNetwork) GetMinWithdrawAmountOk() (*string, bool) {
	if o == nil || o.MinWithdrawAmount == nil {
		return nil, false
	}
	return o.MinWithdrawAmount, true
}

// HasMinWithdrawAmount returns a boolean if a field has been set.
func (o *CurrencyNetwork) HasMinWithdrawAmount() bool {
	if o != nil && o.MinWithdrawAmount != nil {
		return true
	}

	return false
}

// SetMinWithdrawAmount gets a reference to the given string and assigns it to the MinWithdrawAmount field.
func (o *CurrencyNetwork) SetMinWithdrawAmount(v string) {
	o.MinWithdrawAmount = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CurrencyNetwork) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrencyNetwork) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CurrencyNetwork) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CurrencyNetwork) SetName(v string) {
	o.Name = &v
}

// GetNeedMemo returns the NeedMemo field value if set, zero value otherwise.
func (o *CurrencyNetwork) GetNeedMemo() bool {
	if o == nil || o.NeedMemo == nil {
		var ret bool
		return ret
	}
	return *o.NeedMemo
}

// GetNeedMemoOk returns a tuple with the NeedMemo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrencyNetwork) GetNeedMemoOk() (*bool, bool) {
	if o == nil || o.NeedMemo == nil {
		return nil, false
	}
	return o.NeedMemo, true
}

// HasNeedMemo returns a boolean if a field has been set.
func (o *CurrencyNetwork) HasNeedMemo() bool {
	if o != nil && o.NeedMemo != nil {
		return true
	}

	return false
}

// SetNeedMemo gets a reference to the given bool and assigns it to the NeedMemo field.
func (o *CurrencyNetwork) SetNeedMemo(v bool) {
	o.NeedMemo = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *CurrencyNetwork) GetNetwork() string {
	if o == nil || o.Network == nil {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrencyNetwork) GetNetworkOk() (*string, bool) {
	if o == nil || o.Network == nil {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *CurrencyNetwork) HasNetwork() bool {
	if o != nil && o.Network != nil {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *CurrencyNetwork) SetNetwork(v string) {
	o.Network = &v
}

func (o CurrencyNetwork) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CanDeposit != nil {
		toSerialize["can_deposit"] = o.CanDeposit
	}
	if o.CanTransfer != nil {
		toSerialize["can_transfer"] = o.CanTransfer
	}
	if o.CanWithdraw != nil {
		toSerialize["can_withdraw"] = o.CanWithdraw
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.ContractAddress != nil {
		toSerialize["contract_address"] = o.ContractAddress
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.MaxFee != nil {
		toSerialize["max_fee"] = o.MaxFee
	}
	if o.MaxFeeForCtAddr != nil {
		toSerialize["max_fee_for_ct_addr"] = o.MaxFeeForCtAddr
	}
	if o.MaxWithdrawAmount != nil {
		toSerialize["max_withdraw_amount"] = o.MaxWithdrawAmount
	}
	if o.MinCollectAmount != nil {
		toSerialize["min_collect_amount"] = o.MinCollectAmount
	}
	if o.MinConfirmations != nil {
		toSerialize["min_confirmations"] = o.MinConfirmations
	}
	if o.MinDepositAmount != nil {
		toSerialize["min_deposit_amount"] = o.MinDepositAmount
	}
	if o.MinFee != nil {
		toSerialize["min_fee"] = o.MinFee
	}
	if o.MinFeeForCtAddr != nil {
		toSerialize["min_fee_for_ct_addr"] = o.MinFeeForCtAddr
	}
	if o.MinWithdrawAmount != nil {
		toSerialize["min_withdraw_amount"] = o.MinWithdrawAmount
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.NeedMemo != nil {
		toSerialize["need_memo"] = o.NeedMemo
	}
	if o.Network != nil {
		toSerialize["network"] = o.Network
	}
	return json.Marshal(toSerialize)
}

type NullableCurrencyNetwork struct {
	value *CurrencyNetwork
	isSet bool
}

func (v NullableCurrencyNetwork) Get() *CurrencyNetwork {
	return v.value
}

func (v *NullableCurrencyNetwork) Set(val *CurrencyNetwork) {
	v.value = val
	v.isSet = true
}

func (v NullableCurrencyNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullableCurrencyNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCurrencyNetwork(val *CurrencyNetwork) *NullableCurrencyNetwork {
	return &NullableCurrencyNetwork{value: val, isSet: true}
}

func (v NullableCurrencyNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCurrencyNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


