/*
 * Wallet OpenAPI Documentation
 *
 * This is a custody wallet service openapi server.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GasStation struct for GasStation
type GasStation struct {
	// Application ID
	AppId string `json:"app_id"`
	// Created time
	CreatedAt *string `json:"created_at,omitempty"`
	// Disabled
	Disabled bool `json:"disabled"`
	// Gas Capacity
	GasCapacity string `json:"gas_capacity"`
	// Gas Threshold
	GasThreshold string `json:"gas_threshold"`
	// Gas Station ID
	Id string `json:"id"`
	// Max Fee Limit
	MaxFeeLimit string `json:"max_fee_limit"`
	// Network
	Network string `json:"network"`
	// Organization ID
	OrgId string `json:"org_id"`
	// Updated time
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewGasStation instantiates a new GasStation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGasStation(appId string, disabled bool, gasCapacity string, gasThreshold string, id string, maxFeeLimit string, network string, orgId string) *GasStation {
	this := GasStation{}
	this.AppId = appId
	this.Disabled = disabled
	this.GasCapacity = gasCapacity
	this.GasThreshold = gasThreshold
	this.Id = id
	this.MaxFeeLimit = maxFeeLimit
	this.Network = network
	this.OrgId = orgId
	return &this
}

// NewGasStationWithDefaults instantiates a new GasStation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGasStationWithDefaults() *GasStation {
	this := GasStation{}
	return &this
}

// GetAppId returns the AppId field value
func (o *GasStation) GetAppId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value
// and a boolean to check if the value has been set.
func (o *GasStation) GetAppIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AppId, true
}

// SetAppId sets field value
func (o *GasStation) SetAppId(v string) {
	o.AppId = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GasStation) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GasStation) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GasStation) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *GasStation) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDisabled returns the Disabled field value
func (o *GasStation) GetDisabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value
// and a boolean to check if the value has been set.
func (o *GasStation) GetDisabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Disabled, true
}

// SetDisabled sets field value
func (o *GasStation) SetDisabled(v bool) {
	o.Disabled = v
}

// GetGasCapacity returns the GasCapacity field value
func (o *GasStation) GetGasCapacity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GasCapacity
}

// GetGasCapacityOk returns a tuple with the GasCapacity field value
// and a boolean to check if the value has been set.
func (o *GasStation) GetGasCapacityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.GasCapacity, true
}

// SetGasCapacity sets field value
func (o *GasStation) SetGasCapacity(v string) {
	o.GasCapacity = v
}

// GetGasThreshold returns the GasThreshold field value
func (o *GasStation) GetGasThreshold() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GasThreshold
}

// GetGasThresholdOk returns a tuple with the GasThreshold field value
// and a boolean to check if the value has been set.
func (o *GasStation) GetGasThresholdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.GasThreshold, true
}

// SetGasThreshold sets field value
func (o *GasStation) SetGasThreshold(v string) {
	o.GasThreshold = v
}

// GetId returns the Id field value
func (o *GasStation) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GasStation) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GasStation) SetId(v string) {
	o.Id = v
}

// GetMaxFeeLimit returns the MaxFeeLimit field value
func (o *GasStation) GetMaxFeeLimit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaxFeeLimit
}

// GetMaxFeeLimitOk returns a tuple with the MaxFeeLimit field value
// and a boolean to check if the value has been set.
func (o *GasStation) GetMaxFeeLimitOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MaxFeeLimit, true
}

// SetMaxFeeLimit sets field value
func (o *GasStation) SetMaxFeeLimit(v string) {
	o.MaxFeeLimit = v
}

// GetNetwork returns the Network field value
func (o *GasStation) GetNetwork() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *GasStation) GetNetworkOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *GasStation) SetNetwork(v string) {
	o.Network = v
}

// GetOrgId returns the OrgId field value
func (o *GasStation) GetOrgId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value
// and a boolean to check if the value has been set.
func (o *GasStation) GetOrgIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OrgId, true
}

// SetOrgId sets field value
func (o *GasStation) SetOrgId(v string) {
	o.OrgId = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *GasStation) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GasStation) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GasStation) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *GasStation) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o GasStation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["app_id"] = o.AppId
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["disabled"] = o.Disabled
	}
	if true {
		toSerialize["gas_capacity"] = o.GasCapacity
	}
	if true {
		toSerialize["gas_threshold"] = o.GasThreshold
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["max_fee_limit"] = o.MaxFeeLimit
	}
	if true {
		toSerialize["network"] = o.Network
	}
	if true {
		toSerialize["org_id"] = o.OrgId
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableGasStation struct {
	value *GasStation
	isSet bool
}

func (v NullableGasStation) Get() *GasStation {
	return v.value
}

func (v *NullableGasStation) Set(val *GasStation) {
	v.value = val
	v.isSet = true
}

func (v NullableGasStation) IsSet() bool {
	return v.isSet
}

func (v *NullableGasStation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGasStation(val *GasStation) *NullableGasStation {
	return &NullableGasStation{value: val, isSet: true}
}

func (v NullableGasStation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGasStation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


