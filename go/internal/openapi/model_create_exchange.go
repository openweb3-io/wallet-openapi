/*
 * Wallet OpenAPI Documentation
 *
 * This is a custody wallet service openapi server.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateExchange struct for CreateExchange
type CreateExchange struct {
	// The currency code of fiat currency, e.g.: USD
	FiatCurrency string `json:"fiat_currency"`
	// The amount of the source currency to be exchange, e.g.: 100000
	FromAmount string `json:"from_amount"`
	// The currency code of source currency, e.g.: TON
	FromCurrency string `json:"from_currency"`
	// The currency code of target currency, e.g.: USDT
	ToCurrency string `json:"to_currency"`
	// The wallet id
	WalletId string `json:"wallet_id"`
}

// NewCreateExchange instantiates a new CreateExchange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateExchange(fiatCurrency string, fromAmount string, fromCurrency string, toCurrency string, walletId string) *CreateExchange {
	this := CreateExchange{}
	this.FiatCurrency = fiatCurrency
	this.FromAmount = fromAmount
	this.FromCurrency = fromCurrency
	this.ToCurrency = toCurrency
	this.WalletId = walletId
	return &this
}

// NewCreateExchangeWithDefaults instantiates a new CreateExchange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateExchangeWithDefaults() *CreateExchange {
	this := CreateExchange{}
	return &this
}

// GetFiatCurrency returns the FiatCurrency field value
func (o *CreateExchange) GetFiatCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FiatCurrency
}

// GetFiatCurrencyOk returns a tuple with the FiatCurrency field value
// and a boolean to check if the value has been set.
func (o *CreateExchange) GetFiatCurrencyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FiatCurrency, true
}

// SetFiatCurrency sets field value
func (o *CreateExchange) SetFiatCurrency(v string) {
	o.FiatCurrency = v
}

// GetFromAmount returns the FromAmount field value
func (o *CreateExchange) GetFromAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FromAmount
}

// GetFromAmountOk returns a tuple with the FromAmount field value
// and a boolean to check if the value has been set.
func (o *CreateExchange) GetFromAmountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FromAmount, true
}

// SetFromAmount sets field value
func (o *CreateExchange) SetFromAmount(v string) {
	o.FromAmount = v
}

// GetFromCurrency returns the FromCurrency field value
func (o *CreateExchange) GetFromCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FromCurrency
}

// GetFromCurrencyOk returns a tuple with the FromCurrency field value
// and a boolean to check if the value has been set.
func (o *CreateExchange) GetFromCurrencyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FromCurrency, true
}

// SetFromCurrency sets field value
func (o *CreateExchange) SetFromCurrency(v string) {
	o.FromCurrency = v
}

// GetToCurrency returns the ToCurrency field value
func (o *CreateExchange) GetToCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ToCurrency
}

// GetToCurrencyOk returns a tuple with the ToCurrency field value
// and a boolean to check if the value has been set.
func (o *CreateExchange) GetToCurrencyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ToCurrency, true
}

// SetToCurrency sets field value
func (o *CreateExchange) SetToCurrency(v string) {
	o.ToCurrency = v
}

// GetWalletId returns the WalletId field value
func (o *CreateExchange) GetWalletId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WalletId
}

// GetWalletIdOk returns a tuple with the WalletId field value
// and a boolean to check if the value has been set.
func (o *CreateExchange) GetWalletIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WalletId, true
}

// SetWalletId sets field value
func (o *CreateExchange) SetWalletId(v string) {
	o.WalletId = v
}

func (o CreateExchange) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["fiat_currency"] = o.FiatCurrency
	}
	if true {
		toSerialize["from_amount"] = o.FromAmount
	}
	if true {
		toSerialize["from_currency"] = o.FromCurrency
	}
	if true {
		toSerialize["to_currency"] = o.ToCurrency
	}
	if true {
		toSerialize["wallet_id"] = o.WalletId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateExchange struct {
	value *CreateExchange
	isSet bool
}

func (v NullableCreateExchange) Get() *CreateExchange {
	return v.value
}

func (v *NullableCreateExchange) Set(val *CreateExchange) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateExchange) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateExchange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateExchange(val *CreateExchange) *NullableCreateExchange {
	return &NullableCreateExchange{value: val, isSet: true}
}

func (v NullableCreateExchange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateExchange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


