/*
 * Wallet OpenAPI Documentation
 *
 * This is a custody wallet service openapi server.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateTransferRequest struct for CreateTransferRequest
type CreateTransferRequest struct {
	// The amount of currency to be transferred
	Amount *string `json:"amount,omitempty"`
	// The code of currency to be transferred
	Currency *string `json:"currency,omitempty"`
	// The ID of the wallet from which the transfer will be made
	From *string `json:"from,omitempty"`
	// The ID of the wallet to which the transfer will be made
	To *string `json:"to,omitempty"`
}

// NewCreateTransferRequest instantiates a new CreateTransferRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTransferRequest() *CreateTransferRequest {
	this := CreateTransferRequest{}
	return &this
}

// NewCreateTransferRequestWithDefaults instantiates a new CreateTransferRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTransferRequestWithDefaults() *CreateTransferRequest {
	this := CreateTransferRequest{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *CreateTransferRequest) GetAmount() string {
	if o == nil || o.Amount == nil {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransferRequest) GetAmountOk() (*string, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *CreateTransferRequest) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *CreateTransferRequest) SetAmount(v string) {
	o.Amount = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *CreateTransferRequest) GetCurrency() string {
	if o == nil || o.Currency == nil {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransferRequest) GetCurrencyOk() (*string, bool) {
	if o == nil || o.Currency == nil {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *CreateTransferRequest) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *CreateTransferRequest) SetCurrency(v string) {
	o.Currency = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *CreateTransferRequest) GetFrom() string {
	if o == nil || o.From == nil {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransferRequest) GetFromOk() (*string, bool) {
	if o == nil || o.From == nil {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *CreateTransferRequest) HasFrom() bool {
	if o != nil && o.From != nil {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *CreateTransferRequest) SetFrom(v string) {
	o.From = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *CreateTransferRequest) GetTo() string {
	if o == nil || o.To == nil {
		var ret string
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransferRequest) GetToOk() (*string, bool) {
	if o == nil || o.To == nil {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *CreateTransferRequest) HasTo() bool {
	if o != nil && o.To != nil {
		return true
	}

	return false
}

// SetTo gets a reference to the given string and assigns it to the To field.
func (o *CreateTransferRequest) SetTo(v string) {
	o.To = &v
}

func (o CreateTransferRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	if o.From != nil {
		toSerialize["from"] = o.From
	}
	if o.To != nil {
		toSerialize["to"] = o.To
	}
	return json.Marshal(toSerialize)
}

type NullableCreateTransferRequest struct {
	value *CreateTransferRequest
	isSet bool
}

func (v NullableCreateTransferRequest) Get() *CreateTransferRequest {
	return v.value
}

func (v *NullableCreateTransferRequest) Set(val *CreateTransferRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTransferRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTransferRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTransferRequest(val *CreateTransferRequest) *NullableCreateTransferRequest {
	return &NullableCreateTransferRequest{value: val, isSet: true}
}

func (v NullableCreateTransferRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTransferRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


