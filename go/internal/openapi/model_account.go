/*
 * Wallet OpenAPI Documentation
 *
 * This is a custody wallet service openapi server.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Account struct for Account
type Account struct {
	// The current balance of the wallet
	Balance string `json:"balance"`
	// The currency associated with the wallet
	Currency string `json:"currency"`
	// Account id
	Id string `json:"id"`
	// The amount of the balance that is in transit
	InTransitBalance string `json:"in_transit_balance"`
	// The amount of the balance that is locked
	LockedBalance string `json:"locked_balance"`
	// The wallet's ID
	WalletId string `json:"wallet_id"`
}

// NewAccount instantiates a new Account object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccount(balance string, currency string, id string, inTransitBalance string, lockedBalance string, walletId string) *Account {
	this := Account{}
	this.Balance = balance
	this.Currency = currency
	this.Id = id
	this.InTransitBalance = inTransitBalance
	this.LockedBalance = lockedBalance
	this.WalletId = walletId
	return &this
}

// NewAccountWithDefaults instantiates a new Account object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountWithDefaults() *Account {
	this := Account{}
	return &this
}

// GetBalance returns the Balance field value
func (o *Account) GetBalance() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value
// and a boolean to check if the value has been set.
func (o *Account) GetBalanceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Balance, true
}

// SetBalance sets field value
func (o *Account) SetBalance(v string) {
	o.Balance = v
}

// GetCurrency returns the Currency field value
func (o *Account) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *Account) GetCurrencyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *Account) SetCurrency(v string) {
	o.Currency = v
}

// GetId returns the Id field value
func (o *Account) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Account) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Account) SetId(v string) {
	o.Id = v
}

// GetInTransitBalance returns the InTransitBalance field value
func (o *Account) GetInTransitBalance() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InTransitBalance
}

// GetInTransitBalanceOk returns a tuple with the InTransitBalance field value
// and a boolean to check if the value has been set.
func (o *Account) GetInTransitBalanceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InTransitBalance, true
}

// SetInTransitBalance sets field value
func (o *Account) SetInTransitBalance(v string) {
	o.InTransitBalance = v
}

// GetLockedBalance returns the LockedBalance field value
func (o *Account) GetLockedBalance() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LockedBalance
}

// GetLockedBalanceOk returns a tuple with the LockedBalance field value
// and a boolean to check if the value has been set.
func (o *Account) GetLockedBalanceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LockedBalance, true
}

// SetLockedBalance sets field value
func (o *Account) SetLockedBalance(v string) {
	o.LockedBalance = v
}

// GetWalletId returns the WalletId field value
func (o *Account) GetWalletId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WalletId
}

// GetWalletIdOk returns a tuple with the WalletId field value
// and a boolean to check if the value has been set.
func (o *Account) GetWalletIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WalletId, true
}

// SetWalletId sets field value
func (o *Account) SetWalletId(v string) {
	o.WalletId = v
}

func (o Account) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["balance"] = o.Balance
	}
	if true {
		toSerialize["currency"] = o.Currency
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["in_transit_balance"] = o.InTransitBalance
	}
	if true {
		toSerialize["locked_balance"] = o.LockedBalance
	}
	if true {
		toSerialize["wallet_id"] = o.WalletId
	}
	return json.Marshal(toSerialize)
}

type NullableAccount struct {
	value *Account
	isSet bool
}

func (v NullableAccount) Get() *Account {
	return v.value
}

func (v *NullableAccount) Set(val *Account) {
	v.value = val
	v.isSet = true
}

func (v NullableAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccount(val *Account) *NullableAccount {
	return &NullableAccount{value: val, isSet: true}
}

func (v NullableAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


