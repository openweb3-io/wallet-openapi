/*
 * Wallet OpenAPI Documentation
 *
 * This is a custody wallet service openapi server.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetGasStationDepositAddressReply struct for GetGasStationDepositAddressReply
type GetGasStationDepositAddressReply struct {
	// Deposit Addresses
	Addresses *[]string `json:"addresses,omitempty"`
}

// NewGetGasStationDepositAddressReply instantiates a new GetGasStationDepositAddressReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetGasStationDepositAddressReply() *GetGasStationDepositAddressReply {
	this := GetGasStationDepositAddressReply{}
	return &this
}

// NewGetGasStationDepositAddressReplyWithDefaults instantiates a new GetGasStationDepositAddressReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetGasStationDepositAddressReplyWithDefaults() *GetGasStationDepositAddressReply {
	this := GetGasStationDepositAddressReply{}
	return &this
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *GetGasStationDepositAddressReply) GetAddresses() []string {
	if o == nil || o.Addresses == nil {
		var ret []string
		return ret
	}
	return *o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetGasStationDepositAddressReply) GetAddressesOk() (*[]string, bool) {
	if o == nil || o.Addresses == nil {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *GetGasStationDepositAddressReply) HasAddresses() bool {
	if o != nil && o.Addresses != nil {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []string and assigns it to the Addresses field.
func (o *GetGasStationDepositAddressReply) SetAddresses(v []string) {
	o.Addresses = &v
}

func (o GetGasStationDepositAddressReply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Addresses != nil {
		toSerialize["addresses"] = o.Addresses
	}
	return json.Marshal(toSerialize)
}

type NullableGetGasStationDepositAddressReply struct {
	value *GetGasStationDepositAddressReply
	isSet bool
}

func (v NullableGetGasStationDepositAddressReply) Get() *GetGasStationDepositAddressReply {
	return v.value
}

func (v *NullableGetGasStationDepositAddressReply) Set(val *GetGasStationDepositAddressReply) {
	v.value = val
	v.isSet = true
}

func (v NullableGetGasStationDepositAddressReply) IsSet() bool {
	return v.isSet
}

func (v *NullableGetGasStationDepositAddressReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetGasStationDepositAddressReply(val *GetGasStationDepositAddressReply) *NullableGetGasStationDepositAddressReply {
	return &NullableGetGasStationDepositAddressReply{value: val, isSet: true}
}

func (v NullableGetGasStationDepositAddressReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetGasStationDepositAddressReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


